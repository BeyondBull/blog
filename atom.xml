<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

 <title>Joshua Lande</title>
 <link href="http://www.joshualande.com/atom.xml" rel="self"/>
 <link href="http://www.joshualande.com/"/>
 <updated>2015-02-02T14:36:42-05:00</updated>
 <id>http://www.joshualande.com</id>
 <author>
   <name>Joshua Lande</name>
   <email></email>
 </author>

 
 <entry>
   <title>Filters, Joins, Aggregations, and All That: A Guide to Querying in SQL</title>
   <link href="http://www.joshualande.com/filters-joins-aggregations"/>
   <updated>2014-08-14T00:00:00-04:00</updated>
   <id>http://www.joshualande.com/filters-joins-aggregations</id>
   <content type="html">&lt;p&gt;&lt;em&gt;This is the fourth post in a &lt;a href=&quot;/data-science-sql&quot;&gt;series of posts&lt;/a&gt;
about doing data science with SQL. The 
&lt;a href=&quot;/create-tables-sql&quot;&gt;previous post&lt;/a&gt;
went over the commands
required to set up the example recipes database from the 
&lt;a href=&quot;/database-normalization&quot;&gt;first post&lt;/a&gt; 
in this series.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;In this post, I will use the example recipes database from the
&lt;a href=&quot;/database-normalization&quot;&gt;first post&lt;/a&gt; to
go over the basics of quering in SQL with the &lt;code&gt;SELECT&lt;/code&gt; statement.
I will start with the basic operators of filtering, joining, and
aggregating. Then I will show how these simple commands can be
combined to create powerful queries.  By the end of this post, you
should be able to write advanced SQL queries.&lt;/p&gt;

&lt;h2 id=&quot;select-from-and-where-in-sql&quot;&gt;SELECT, FROM, and WHERE in SQL&lt;/h2&gt;

&lt;p&gt;We can use the &lt;code&gt;SELECT&lt;/code&gt; statement in SQL to query data from a
database.  For example, we might be interested in finding
all of the ingredients in the “Tomato Soup” recipe
(from the 
recipes database described in the
&lt;a href=&quot;/database-normalization&quot;&gt;first post&lt;/a&gt; 
in this series). &lt;/p&gt;

&lt;p&gt;This query is non-trivial because this
information is spread across three tables.
As a first, step we could query for the recipe ID of this
recipe with:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;sql
SELECT recipe_id 
  FROM recipes
 WHERE recipe_name=&quot;Tomato Soup&quot;
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;This says to take the &lt;code&gt;recipes&lt;/code&gt; table and take the &lt;code&gt;recipe_id&lt;/code&gt;
column for all rows where the &lt;code&gt;recipe_name&lt;/code&gt; column has a
particular value.  This query returns the table&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;recipe_id&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;2&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Given this recipe ID, we can get the ingredient IDs for the recipe
using a similar query on the recipe-ingredients-mapping table:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;sql
SELECT ingredient_id
  FROM recipe_ingredients
 WHERE recipe_id = 2
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;This returns&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;ingredient_id&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;3&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;6&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Finally, we can find the ingredient names knowing their IDs:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;sql
SELECT ingredient_name
  FROM ingredients
 WHERE ingredient_id=3
    OR ingredient_id=6
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;This returns:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;ingredient_name&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;Tomatoes&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Milk&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;the-join-operator-in-sql&quot;&gt;The JOIN Operator in SQL&lt;/h2&gt;

&lt;p&gt;Because our data is spread across three tables, it is cubmersome
and error-prone to have to run multiple queries to find the information
we want.  We can avoid this by joining the tables together.&lt;/p&gt;

&lt;p&gt;When we join two tables on a column in SQL, it will create every
possible combination of rows in the output table where the condition
holds For example, if we joined &lt;code&gt;recipes&lt;/code&gt; with &lt;code&gt;recipe_ingredients&lt;/code&gt;
on the recipe ID:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;sql
SELECT *
  FROM recipes
  JOIN recipe_ingredients
    ON recipes.recipe_id = recipe_ingredients.recipe_id
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;We get the table:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;recipe_id&lt;/th&gt;
      &lt;th&gt;recipe_name&lt;/th&gt;
      &lt;th&gt;recipe_id&lt;/th&gt;
      &lt;th&gt;ingredient_id&lt;/th&gt;
      &lt;th&gt;amount&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;3&lt;/td&gt;
      &lt;td&gt;Grilled Cheese&lt;/td&gt;
      &lt;td&gt;3&lt;/td&gt;
      &lt;td&gt;5&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;3&lt;/td&gt;
      &lt;td&gt;Grilled Cheese&lt;/td&gt;
      &lt;td&gt;3&lt;/td&gt;
      &lt;td&gt;7&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;Tacos&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;Tacos&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;Tacos&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;3&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;Tacos&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;4&lt;/td&gt;
      &lt;td&gt;3&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;Tacos&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;5&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;Tomato Soup&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;3&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;Tomato Soup&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;6&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;This joined table includes the recipe names along with the recipe
IDs for each recipe-ingredient pair.&lt;/p&gt;

&lt;p&gt;Getting back to our example from above, we can compute the ingredient
IDs for ‘Tomato Soup’ by joining &lt;code&gt;recipes&lt;/code&gt; with &lt;code&gt;recipe_ingredients&lt;/code&gt;
on the recipe ID.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;sql
SELECT recipe_ingredients.ingredient_id
  FROM recipes
  JOIN recipe_ingredients
    ON recipes.recipe_id = recipe_ingredients.recipe_id
 WHERE recipes.recipe_name = &#39;Tomato Soup&#39;
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;This returns:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;ingredient_id&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;3&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;6&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;In the next section, we will show how we can also join with the
&lt;code&gt;ingredients&lt;/code&gt; table to directly get the ingredient names.&lt;/p&gt;

&lt;p&gt;Having to use the full table names repeatedly in a SQL query is
cumbersome.  SQL provides a convenient shorthand where
we can give each table a nickname:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;sql
SELECT b.ingredient_id
  FROM recipes AS a
  JOIN recipe_ingredients AS b
    ON a.recipe_id = b.recipe_id
 WHERE a.recipe_name = &#39;Tomato Soup&#39;
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;This is the same query as before, but slightly less verbose.&lt;/p&gt;

&lt;h2 id=&quot;joining-multiple-tables-in-sql&quot;&gt;JOINing Multiple Tables in SQL&lt;/h2&gt;

&lt;p&gt;SQL allows us to join multiple tables for even more powerful queries.
Getting back to our original example, we can directly find the ingredient
names for the ingredients in ‘Tomato Soup’ by joining all three
tables together:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;sql
SELECT c.ingredient_name 
  FROM recipes AS a
  JOIN recipe_ingredients AS b
    ON a.recipe_id = b.recipe_id
  JOIN ingredients AS c
    ON b.ingredient_id = c.ingredient_id
 WHERE a.recipe_name = &quot;Tomato Soup&quot;
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;As expected, this returns the table:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;ingredient_name&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;Tomatoes&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Milk&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;What is great about SQL is that by joining tables together,
we can ask very diverse questions about our data.
For example, finding all the recipes that include ‘tomatoes’
is just as straightforward:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;sql
SELECT a.recipe_name
  FROM recipes AS a
  JOIN recipe_ingredients AS b
    ON a.recipe_id = b.recipe_id
  JOIN ingredients AS c
    ON b.ingredient_id = c.ingredient_id
 WHERE c.ingredient_name = &quot;tomatoes&quot;
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;This returns:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;recipe_name&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;Tacos&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Tomato Soup&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;the-group-by-operator-in-sql&quot;&gt;The GROUP BY Operator In SQL&lt;/h2&gt;

&lt;p&gt;The next important concept in SQL is aggregating rows.
This is done with the &lt;code&gt;GROUP BY&lt;/code&gt; command.&lt;/p&gt;

&lt;p&gt;Supposed for example that we wanted to find the number
of ingredients in each recipe. We could do this by 
grouping the rows in the &lt;code&gt;recipe_ingredients&lt;/code&gt; table by the
recipe ID and counting the number or grouped rows:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;sql
  SELECT recipe_id, 
         COUNT(ingredient_id) AS num_ingredients
    FROM recipe_ingredients
GROUP BY recipe_id
ORDER BY num_ingredients DESC
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;The code returns:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;recipe_id&lt;/th&gt;
      &lt;th&gt;num_ingredients&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;5&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;3&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;We can combine the &lt;code&gt;GROUP BY&lt;/code&gt; and &lt;code&gt;JOIN&lt;/code&gt; operators in a single query.
To compute in addition the price of each recipe, we would need to figure
out the price of each ingredient by joining with the ingredients table.
This query would look like:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;sql
  SELECT recipe_id, 
         COUNT(a.ingredient_id) AS num_ingredients, 
         SUM(a.amount*b.ingredient_price) AS total_price
    FROM recipe_ingredients as a
    JOIN ingredients as b
      ON a.ingredient_id = b.ingredient_id
GROUP BY a.recipe_id
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;This returns&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;recipe_id&lt;/th&gt;
      &lt;th&gt;num_ingredients&lt;/th&gt;
      &lt;th&gt;total_price&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;5&lt;/td&gt;
      &lt;td&gt;20&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;5&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;3&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;7&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Similarly, if we want to make the table display recipe names,
we could also JOIN with the recipes tables:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;sql
  SELECT c.recipe_name, 
         COUNT(a.ingredient_id) AS num_ingredients, 
         SUM(a.amount*b.ingredient_price) AS total_price
    FROM recipe_ingredients AS a
    JOIN ingredients AS b
      ON a.ingredient_id = b.ingredient_id
    JOIN recipes AS c
      ON a.recipe_id = c.recipe_id
GROUP BY a.recipe_id
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;This returns a nicer formated table:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;recipe_name&lt;/th&gt;
      &lt;th&gt;num_ingredients&lt;/th&gt;
      &lt;th&gt;total_price&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;Tacos&lt;/td&gt;
      &lt;td&gt;5&lt;/td&gt;
      &lt;td&gt;20&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Tomato Soup&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;5&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Grilled Cheese&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;7&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Finally, as a shorthand, SQL allows you to 
refer to the columns in the &lt;code&gt;SELECT&lt;/code&gt;
clause by numbering &lt;/p&gt;

&lt;p&gt;&lt;code&gt;sql
  SELECT c.recipe_name, 
         COUNT(a.ingredient_id) AS num_ingredients, 
         SUM(a.amount*b.ingredient_price) AS total_price
    FROM recipe_ingredients AS a
    JOIN ingredients AS b
      ON a.ingredient_id = b.ingredient_id
    JOIN recipes AS c
      ON a.recipe_id = c.recipe_id
GROUP BY 1
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Some people consider this to be more elegant
and less error prone.&lt;/p&gt;

&lt;h2 id=&quot;aggregation-functions-in-sql&quot;&gt;Aggregation Functions in SQL&lt;/h2&gt;

&lt;p&gt;As you saw above, SQL can apply different
aggregation functions. This query demonstrates
more of them:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;sql
SELECT COUNT(ingredient_price) as count,
       AVG(ingredient_price) as avg,
       SUM(ingredient_price) as sum,
       MIN(ingredient_price) as min,
       MAX(ingredient_price) as max,
       STDDEV(ingredient_price) as stddev,
       SUM(ingredient_price) as sum
  FROM ingredients
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;This returns&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;count&lt;/th&gt;
      &lt;th&gt;avg&lt;/th&gt;
      &lt;th&gt;sum&lt;/th&gt;
      &lt;th&gt;min&lt;/th&gt;
      &lt;th&gt;max&lt;/th&gt;
      &lt;th&gt;stddev&lt;/th&gt;
      &lt;th&gt;sum&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;7&lt;/td&gt;
      &lt;td&gt;2.2857&lt;/td&gt;
      &lt;td&gt;16&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;5&lt;/td&gt;
      &lt;td&gt;1.2777531299998797&lt;/td&gt;
      &lt;td&gt;16&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Note here that when you leave out the &lt;code&gt;GROUP BY&lt;/code&gt; class, but include
an aggregation function, SQL assumes that you want to group all
rows together.&lt;/p&gt;

&lt;p&gt;You can find the full list of aggregation functions in MySQL
&lt;a href=&quot;http://dev.mysql.com/doc/refman/5.0/en/group-by-functions.html&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;the-having-operator-in-sql&quot;&gt;The HAVING Operator in SQL&lt;/h2&gt;

&lt;p&gt;The &lt;code&gt;HAVING&lt;/code&gt; clause in SQL is almost exactly like the &lt;code&gt;WHERE&lt;/code&gt;
clause, but filters the table after the aggregation has been
performed.&lt;/p&gt;

&lt;p&gt;Suppose we wanted to find only recipes with 2 ingredients in it.
We could use the &lt;code&gt;HAVING&lt;/code&gt; clause:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;sql
  SELECT recipe_id, 
         COUNT(ingredient_id) AS num_ingredients
    FROM recipe_ingredients
GROUP BY recipe_id
  HAVING num_ingredients = 2
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;This creates the table&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;recipe_id&lt;/th&gt;
      &lt;th&gt;num_ingredients&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;3&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;As you will see below, &lt;code&gt;HAVING&lt;/code&gt; is just a convenient shorthand to
avoid using a subquery.&lt;/p&gt;

&lt;h2 id=&quot;subqueries-in-sql&quot;&gt;Subqueries in SQL&lt;/h2&gt;

&lt;p&gt;A more challenging query would be to make a list of the number of
ingredients, but only for recipes that include tomatoes.&lt;/p&gt;

&lt;p&gt;To do this, we first would need to find all the recipes which include
tomatoes and then count the number of ingredients for each of those
recipes.&lt;/p&gt;

&lt;p&gt;We could imagine doing this in two steps.  First, we find the recipes
that have tomatoes in it:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;sql
SELECT a.recipe_id
  FROM recipe_ingredients AS a
  JOIN ingredients AS b
    ON a.ingredient_id = b.ingredient_id
 WHERE b.ingredient_name = &#39;Tomatoes&#39; 
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;This creates the table:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;recipe_id&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;2&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Next, we could joining this table with the ingredient count table
from the query above to filter out the recipes that aren’t in this table.&lt;/p&gt;

&lt;p&gt;This leads us to the idea of subqueries. Because every SQL
query returns a table, another SQL query can be used instead of a table
inside of another SQL query.&lt;/p&gt;

&lt;p&gt;The final query is:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;sql
  SELECT b.recipe_name, 
         COUNT(a.ingredient_id) AS num_ingredients
    FROM recipe_ingredients AS a
    JOIN recipes AS b
      ON a.recipe_id = b.recipe_id
    JOIN (
             SELECT c.recipe_id
             FROM recipe_ingredients AS c
             JOIN ingredients AS d
             ON c.ingredient_id = d.ingredient_id
             WHERE d.ingredient_name = &#39;Tomatoes&#39; 
         ) AS e
      ON b.recipe_id = e.recipe_id
GROUP BY a.recipe_id
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;As expected, this returns&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;recipe_name&lt;/th&gt;
      &lt;th&gt;num_ingredients&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;Tacos&lt;/td&gt;
      &lt;td&gt;5&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Tomato Soup&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;What’s cool about SQL is that it is very flexible and can allow
multiple subqueries to be nested together.&lt;/p&gt;

&lt;h2 id=&quot;the-distinct-operator&quot;&gt;The DISTINCT Operator&lt;/h2&gt;

&lt;p&gt;In SQL, &lt;code&gt;DISTINCT&lt;/code&gt; operator can be used to find all of the unique
rows.&lt;/p&gt;

&lt;p&gt;For example, to find all the recipes that include
either beef or cheese, we could use the SQL query:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;sql
SELECT DISTINCT recipe_name
  FROM recipe_ingredients AS a
  JOIN ingredients AS b
    ON a.ingredient_id = b.ingredient_id
  JOIN recipes AS c
    ON a.recipe_id = c.recipe_id
 WHERE b.ingredient_name = &#39;Cheese&#39; 
    OR b.ingredient_name = &#39;Beef&#39;
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;This creates&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;recipe_name&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;Grilled Cheese&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Tacos&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Note that here the &lt;code&gt;DISTINCT&lt;/code&gt;
keyword is required because otherwise two rows would
be returned for tacos since they contain both
cheese and beef.&lt;/p&gt;

&lt;p&gt;We can count the number of distinct recipes by
putting the &lt;code&gt;COUNT&lt;/code&gt; keyword outside the &lt;code&gt;DISTINCT&lt;/code&gt;
keyword:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;sql
SELECT COUNT(DISTINCT recipe_name) AS num_recipes
  FROM recipe_ingredients AS a
  JOIN ingredients AS b
    ON a.ingredient_id = b.ingredient_id
  JOIN recipes AS c
    ON a.recipe_id = c.recipe_id
 WHERE b.ingredient_name = &#39;Cheese&#39; 
    OR b.ingredient_name = &#39;Beef&#39;
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;This returns:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;num_recipes&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;2&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;the-order-by-operator-in-sql&quot;&gt;The ORDER BY operator in SQL&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;ORDER BY&lt;/code&gt; can be used to sort the output rows based on a particular
column. For example, if we wanted to sort the ingredients by how
expensive they are in descending order of price, we could run the
query:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;sql
  SELECT *
    FROM ingredients
ORDER BY ingredient_price DESC
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;This returns&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;ingredient_id&lt;/th&gt;
      &lt;th&gt;ingredient_name&lt;/th&gt;
      &lt;th&gt;ingredient_price&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;Beef&lt;/td&gt;
      &lt;td&gt;5&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;5&lt;/td&gt;
      &lt;td&gt;Cheese&lt;/td&gt;
      &lt;td&gt;3&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;3&lt;/td&gt;
      &lt;td&gt;Tomatoes&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;4&lt;/td&gt;
      &lt;td&gt;Taco Shell&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;7&lt;/td&gt;
      &lt;td&gt;Bread&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;Lettuce&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;6&lt;/td&gt;
      &lt;td&gt;Milk&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;If we wanted to sort columns of the same price alphabetically by name, we could
use a similar query but perform a second sort based on the price:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;sql
  SELECT *
    FROM ingredients
ORDER BY ingredient_price DESC, ingredient_name
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;This creates the table:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;ingredient_id&lt;/th&gt;
      &lt;th&gt;ingredient_name&lt;/th&gt;
      &lt;th&gt;ingredient_price&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;Beef&lt;/td&gt;
      &lt;td&gt;5&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;5&lt;/td&gt;
      &lt;td&gt;Cheese&lt;/td&gt;
      &lt;td&gt;3&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;7&lt;/td&gt;
      &lt;td&gt;Bread&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;4&lt;/td&gt;
      &lt;td&gt;Taco Shell&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;3&lt;/td&gt;
      &lt;td&gt;Tomatoes&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;Lettuce&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;6&lt;/td&gt;
      &lt;td&gt;Milk&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;the-limit-operator-in-sql&quot;&gt;The LIMIT operator in SQL&lt;/h2&gt;

&lt;p&gt;We can use the &lt;code&gt;LIMIT&lt;/code&gt; operator to limit the number of results returned
by the query. For example, to get only the most expensive ingredient, we could use
the query:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;sql
  SELECT *
    FROM ingredients
ORDER BY ingredient_price DESC
   LIMIT 1
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;This returns just one result:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;ingredient_id&lt;/th&gt;
      &lt;th&gt;ingredient_name&lt;/th&gt;
      &lt;th&gt;ingredient_price&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;Beef&lt;/td&gt;
      &lt;td&gt;5&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h1 id=&quot;self-and-inequality-joins&quot;&gt;Self AND Inequality Joins&lt;/h1&gt;

&lt;p&gt;The final concepts we will learn about is self and equality joins.  As
a concrete example, supposed that we wanted to compute the number
of shared ingredients for all pairs of recipes.&lt;/p&gt;

&lt;p&gt;To compute this, we can join the ingredient-recipe mapping table
with itself and select for rows that have the same ingredient.
This will create a row for ever matching ingredient in every pair
of recipes:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;sql
  SELECT a.recipe_id, b.recipe_id, a.ingredient_id
    FROM recipe_ingredients AS a
    JOIN recipe_ingredients AS b
      ON a.ingredient_id = b.ingredient_id
     AND a.recipe_id != b.recipe_id
ORDER BY a.recipe_id, b.recipe_id
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Note that we have to filter for &lt;code&gt;a.recipe_id != b.recipe_id&lt;/code&gt; to avoid
matching recipe with themselves. Joins with an inequality
condition are unsurprisingly called inequality joins.&lt;/p&gt;

&lt;p&gt;This returns&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;recipe_id&lt;/th&gt;
      &lt;th&gt;recipe_id&lt;/th&gt;
      &lt;th&gt;ingredient_id&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;3&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;3&lt;/td&gt;
      &lt;td&gt;5&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;3&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;3&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;5&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;This table shows the recipe 1 (“Tacos”) and recipe 2 (“Tomato Soup”)
share ingredient 3 (“Tomatoes”). Similarly, recipe 1 (“Tacos”) and
recipe 3 (“Grilled Cheese”) share ingredient 5 (“Cheese”).&lt;/p&gt;

&lt;p&gt;One issue with this query is that it matches every pair of ingredients
twice. To avoid this, we can modify the query to 
return only rows when the first recipe ID is less than
the second.&lt;/p&gt;

&lt;p&gt;Finally, we can can aggregate over the recipe IDs
to compute the count of shared ingredients:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;sql
  SELECT a.recipe_id, 
         b.recipe_id, 
         COUNT(*) as num_shared
    FROM recipe_ingredients AS a
    JOIN recipe_ingredients AS b
      ON a.recipe_id &amp;lt; b.recipe_id
     AND a.ingredient_id = b.ingredient_id 
GROUP BY a.recipe_id, b.recipe_id
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;As expected, this returns&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;recipe_id&lt;/th&gt;
      &lt;th&gt;recipe_id&lt;/th&gt;
      &lt;th&gt;num_shared&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;3&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;We can include the recipe names by also joining with the recipes
table:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;sql
  SELECT c.recipe_name AS recipe_1, 
         d.recipe_name AS recipe_2, 
         COUNT(*) AS num_shared
    FROM recipe_ingredients AS a
    JOIN recipe_ingredients AS b
      ON a.recipe_id &amp;lt; b.recipe_id
     AND a.ingredient_id = b.ingredient_id 
    JOIN recipes AS c
      ON a.recipe_id = c.recipe_id
    JOIN recipes AS d
      ON b.recipe_id = d.recipe_id
GROUP BY a.recipe_id, b.recipe_id
ORDER BY recipe_1, recipe_2
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;This returns:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;recipe_1&lt;/th&gt;
      &lt;th&gt;recipe_2&lt;/th&gt;
      &lt;th&gt;num_shared&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;Tacos&lt;/td&gt;
      &lt;td&gt;Grilled Cheese&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Tacos&lt;/td&gt;
      &lt;td&gt;Tomato Soup&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;From these examples, I hope you see that the simple SQL operators
can be combined to perform very powerful queries.&lt;/p&gt;

&lt;p&gt;If you have any questions or comments, please post them below. If
you liked this post, you can
&lt;a href=&quot;https://twitter.com/intent/tweet?url=http://www.joshualande.com/filters-joins-aggregations&amp;amp;text=Filters, Joins, Aggregations, and All That: A Guide to Querying in SQL&amp;amp;via=joshualande&quot; target=&quot;_blank&quot;&gt;
  share it with your followers&lt;/a&gt; 
or 
&lt;a href=&quot;https://twitter.com/joshualande&quot;&gt;
  follow me on Twitter&lt;/a&gt;!&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>How to Create Tables and Insert Data into SQL Databases</title>
   <link href="http://www.joshualande.com/create-tables-sql"/>
   <updated>2014-04-28T00:00:00-04:00</updated>
   <id>http://www.joshualande.com/create-tables-sql</id>
   <content type="html">&lt;p&gt;&lt;em&gt;This is the third post in a &lt;a href=&quot;/data-science-sql&quot;&gt;series of posts&lt;/a&gt;
about doing data science with SQL. The 
&lt;a href=&quot;/install-mysql&quot;&gt;previous post&lt;/a&gt;
covered the steps required to install MySQL on on your
local machine.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;In this post, I will go over the commands required to set up the
example recipe database from the 
&lt;a href=&quot;/database-normalization&quot;&gt;first post&lt;/a&gt; in this series.  By the end
of this post, you will understand how to create new tables and you
will have a working database to run SQL queries on!&lt;/p&gt;

&lt;h2 id=&quot;creating-the-recipes-database-in-sql&quot;&gt;Creating the Recipes Database in SQL&lt;/h2&gt;

&lt;p&gt;To create the recipes database, we first need to create a database
to work in. We can do this with the command:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;sql
CREATE DATABASE recipes_database;
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Having multiple databases is useful to separate different
projects. We can select our database with the command:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;sql
USE recipes_database;
&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&quot;creating-tables-in-sql&quot;&gt;Creating Tables in SQL&lt;/h2&gt;

&lt;p&gt;To create the &lt;code&gt;recipes&lt;/code&gt; table inside &lt;code&gt;recipes_database&lt;/code&gt;, we can use
the &lt;code&gt;CREATE TABLE&lt;/code&gt; command:&lt;/p&gt;

&lt;p&gt;```sql
CREATE TABLE recipes (
  recipe_id INT NOT NULL,
  recipe_name VARCHAR(30) NOT NULL,
  PRIMARY KEY (recipe_id),
  UNIQUE (recipe_name)
);&lt;/p&gt;

&lt;p&gt;INSERT INTO recipes 
    (recipe_id, recipe_name) 
VALUES 
    (1,”Tacos”),
    (2,”Tomato Soup”),
    (3,”Grilled Cheese”);
```&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;PRIMARY KEY&lt;/code&gt; forces every row to be a unique value.  This stops
several recipes from having the same ID.  In addition, we use the
&lt;code&gt;UNIQUE&lt;/code&gt; keyword to ensure that no two recipes have the same name.&lt;/p&gt;

&lt;p&gt;You will notice that different columns can have different types.
Recipe IDs are integers and recipe names are variable length arrays
of characters.  &lt;code&gt;VARCHAR(30)&lt;/code&gt; means that the strings can store up
to 30 characters.  Other common types include &lt;code&gt;FLOAT&lt;/code&gt;, &lt;code&gt;DOUBLE&lt;/code&gt;,
&lt;code&gt;DATE&lt;/code&gt;, and &lt;code&gt;TIMESTAMP&lt;/code&gt;. There is additional documented on types
&lt;a href=&quot;http://dev.mysql.com/doc/refman/5.0/en/data-types.html&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Next, we can create the ingredients table:&lt;/p&gt;

&lt;p&gt;```sql
CREATE TABLE ingredients (
  ingredient_id INT NOT NULL, 
  ingredient_name VARCHAR(30) NOT NULL,
  ingredient_price INT NOT NULL,
  PRIMARY KEY (ingredient_id),&lt;br /&gt;
  UNIQUE (ingredient_name)
);&lt;/p&gt;

&lt;p&gt;INSERT INTO ingredients
    (ingredient_id, ingredient_name, ingredient_price)
VALUES 
    (1, “Beef”, 5),
    (2, “Lettuce”, 1),
    (3, “Tomatoes”, 2),
    (4, “Taco Shell”, 2),
    (5, “Cheese”, 3),
    (6, “Milk”, 1),
    (7, “Bread”, 2);
```&lt;/p&gt;

&lt;p&gt;Note that we do not ensure uniqueness of &lt;code&gt;ingredient_price&lt;/code&gt; because
multiple recipes can have the same price.&lt;/p&gt;

&lt;p&gt;Finally, we can create the recipe-ingredient-mapping table:&lt;/p&gt;

&lt;p&gt;```sql
CREATE TABLE recipe_ingredients (
  recipe_id int NOT NULL, 
  ingredient_id INT NOT NULL, 
  amount INT NOT NULL,
  PRIMARY KEY (recipe_id,ingredient_id)
);&lt;/p&gt;

&lt;p&gt;INSERT INTO recipe_ingredients 
    (recipe_id, ingredient_id, amount)
VALUES
    (1,1,1),
    (1,2,2),
    (1,3,2),
    (1,4,3),
    (1,5,1),
    (2,3,2),
    (2,6,1),
    (3,5,1),
    (3,7,2);
```&lt;/p&gt;

&lt;p&gt;The last row says, for example, that the recipe with an ID of 3
(“Grilled Cheese”) has an amount 2 of the ingredient with ID 7
(“Bread”).&lt;/p&gt;

&lt;p&gt;Notice that our &lt;code&gt;PRIMARY KEY&lt;/code&gt; is for recipe ID and ingredient ID pairs.
We require only that the combination is unique because
each recipe can have a particular ingredient only once.&lt;/p&gt;

&lt;h2 id=&quot;autoincrement-ids&quot;&gt;AUTO_INCREMENT IDs&lt;/h2&gt;

&lt;p&gt;There is an &lt;code&gt;AUTO_INCREMENT&lt;/code&gt; command which can be used to let SQL
automatically pick the recipe and ingredient IDs to ensure uniqueness.
Using this command, we can created the same &lt;code&gt;recipes&lt;/code&gt; table in a
less error-prone way:&lt;/p&gt;

&lt;p&gt;```sql
CREATE TABLE recipes (
  recipe_id INT NOT NULL AUTO_INCREMENT,
  recipe_name VARCHAR(30) NOT NULL,
  PRIMARY KEY (recipe_id),
  UNIQUE (recipe_name)
);&lt;/p&gt;

&lt;p&gt;INSERT INTO recipes 
    (recipe_name) 
VALUES 
    (“Tacos”),
    (“Tomato Soup”),
    (“Grilled Cheese”);
```&lt;/p&gt;

&lt;h2 id=&quot;browse-the-tables&quot;&gt;Browse the Tables&lt;/h2&gt;

&lt;p&gt;To browse the tables in the database, we can run the &lt;code&gt;SELECT&lt;/code&gt;
command from the command line:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;
mysql&amp;gt;   SELECT * 
    -&amp;gt;     FROM recipes
    -&amp;gt; ORDER BY recipe_id;
+-----------+----------------+
| recipe_id | recipe_name    |
+-----------+----------------+
|         1 | Tacos          |
|         2 | Tomato Soup    |
|         3 | Grilled Cheese |
+-----------+----------------+
3 rows in set (0.00 sec)
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;We can also use the content tab in Sequel Pro to graphically browse
the tables:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/sequel_pro_content_tab.jpg&quot; alt=&quot;Sequel Pro Content Tab&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;In the &lt;a href=&quot;/filters-joins-aggregations&quot;&gt;next post&lt;/a&gt;
in this 
&lt;a href=&quot;/data-science-sql&quot;&gt;series of posts&lt;/a&gt;, 
I will go over the basics of quering for data in a SQL database.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;If you have any questions or comments, please post them below. If
you liked this post, you can
&lt;a href=&quot;https://twitter.com/intent/tweet?url=http://www.joshualande.com/create-tables-sql&amp;amp;text=How to Create Tables and Insert Data into SQL Databases&amp;amp;via=joshualande&quot; target=&quot;_blank&quot;&gt;
  share it with your followers&lt;/a&gt; 
or 
&lt;a href=&quot;https://twitter.com/joshualande&quot;&gt;
  follow me on Twitter&lt;/a&gt;!&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>How to Install MySQL On Your Local Machine</title>
   <link href="http://www.joshualande.com/install-mysql"/>
   <updated>2014-04-25T00:00:00-04:00</updated>
   <id>http://www.joshualande.com/install-mysql</id>
   <content type="html">&lt;p&gt;&lt;em&gt;This is the second post in a &lt;a href=&quot;/data-science-sql&quot;&gt;series of posts&lt;/a&gt;
about doing data science with SQL. The &lt;a href=&quot;/database-normalization&quot;&gt;previous post&lt;/a&gt;
described the topic of database normalization and good database design.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;In this post, I will describe how to setup &lt;a href=&quot;http://www.mysql.com/&quot;&gt;MySQL&lt;/a&gt;
on your local machine.  MySQL is great for learning about SQL and
relational databases because it is popular, open source, and easy
to get started with.  By the end of this post, you will be able to
issue SQL queries against a MySQL database on your local machine.&lt;/p&gt;

&lt;h2 id=&quot;setting-up-sql-on-your-local-machine&quot;&gt;Setting up SQL On Your local Machine&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;mysql.com&quot;&gt;mysql.com&lt;/a&gt; documents the steps required
to install MySQL on
&lt;a href=&quot;https://dev.mysql.com/doc/refman/5.0/en/windows-installation.html&quot;&gt;Windows&lt;/a&gt;
and
&lt;a href=&quot;https://dev.mysql.com/doc/refman/5.0/en/macosx-installation.html&quot;&gt;Mac&lt;/a&gt;.
To install MySQL, you can get the installer
&lt;a href=&quot;http://dev.mysql.com/downloads/mysql/&quot;&gt;here&lt;/a&gt;.
On a Mac, it is as easy as downloading a disk image, double clicking to install,
and then stepping through the installation process.&lt;/p&gt;

&lt;p&gt;The Mac disk image also comes with a startup package which will
automatically launch MySQL when you start your computer.  Additionally,
it adds a convenient menu in the System Preferences for managing
MySQL:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/mysql_system_preferences.jpg&quot; alt=&quot;MySQL System Preferences&quot; /&gt;&lt;/p&gt;

&lt;p&gt;After you setup MySQL, you can set the root MySQL account 
from the command line by issuing the command:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;bash
$ mysqladmin -u root password: XXXXXXXXXXXX
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;SQL has robust permissions so that different accounts can have
different permissions. This is good in production environments, but
for now logging in as root with full permissions is fine.&lt;/p&gt;

&lt;p&gt;You can connect to the MySQL database from the command line:&lt;/p&gt;

&lt;p&gt;```bash
$ mysql -u root –host=localhost –password
Enter password: 
Welcome to the MySQL monitor.  Commands end with ; or \g.
Your MySQL connection id is 22
Server version: 5.6.12 MySQL Community Server (GPL)&lt;/p&gt;

&lt;p&gt;Copyright (c) 2000, 2013, Oracle and/or its affiliates. All rights reserved.&lt;/p&gt;

&lt;p&gt;Oracle is a registered trademark of Oracle Corporation and/or its
affiliates. Other names may be trademarks of their respective
owners.&lt;/p&gt;

&lt;p&gt;Type ‘help;’ or ‘\h’ for help. Type ‘\c’ to clear the current input statement.&lt;/p&gt;

&lt;p&gt;mysql&amp;gt; …
```&lt;/p&gt;

&lt;p&gt;Now you are ready to issue SQL commands!&lt;/p&gt;

&lt;h1 id=&quot;the-sequel-pro-sql-client-on-os-x&quot;&gt;The Sequel Pro SQL Client on OS X&lt;/h1&gt;

&lt;p&gt;If you are using an Apple computer, I recommend using the free and
open-source graphical program &lt;a href=&quot;http://www.sequelpro.com/&quot;&gt;Sequel Pro&lt;/a&gt;
to connect to the database and to run SQL commands.  Sequel Pro also
simplifies the process of viewing tables and inspecting other
database properties. The sign-in screen looks like:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/sequel_pro_connect_tab.jpg&quot; alt=&quot;Sequel Pro Connect Tab&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Once you install Sequel Pro, you connect to it with your user name
and password as above.&lt;/p&gt;

&lt;p&gt;Inside of Sequel Pro, there is a query menu
where you can issue SQL commands against the database:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/sequel_pro_query_tab.jpg&quot; alt=&quot;Sequel Pro Query Tab&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;other-mysql-clients&quot;&gt;Other MySQL Clients&lt;/h1&gt;

&lt;p&gt;If you prefer, there are several other programs for connecting to 
MySQL databases.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;MySQL Workbench (&lt;a href=&quot;http://dev.mysql.com/downloads/tools/workbench/&quot;&gt;link&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;DBVisualizer (&lt;a href=&quot;http://www.dbvis.com/&quot;&gt;link&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;phpMyAdmin (&lt;a href=&quot;http://www.phpmyadmin.net/home_page/&quot;&gt;link&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;HeidiSQL (&lt;a href=&quot;http://www.heidisql.com/&quot;&gt;link&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;In the &lt;a href=&quot;/create-tables-sql&quot;&gt;next post&lt;/a&gt; in this
&lt;a href=&quot;/data-science-sql&quot;&gt;series of posts&lt;/a&gt;, 
we will go over the SQL commands
required to set up the example recipes database from the 
&lt;a href=&quot;/database-normalization&quot;&gt;first post&lt;/a&gt; 
in this series.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;If you have any questions or comments, please post them below. If
you liked this post, you can
&lt;a href=&quot;https://twitter.com/intent/tweet?url=http://www.joshualande.com/install-mysql&amp;amp;text=How to Install MySQL On Your Local Machine&amp;amp;via=joshualande&quot; target=&quot;_blank&quot;&gt;
  share it with your followers&lt;/a&gt; 
or 
&lt;a href=&quot;https://twitter.com/joshualande&quot;&gt;
  follow me on Twitter&lt;/a&gt;!&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>Design a Better SQL Database With Database Normalization</title>
   <link href="http://www.joshualande.com/database-normalization"/>
   <updated>2014-04-18T00:00:00-04:00</updated>
   <id>http://www.joshualande.com/database-normalization</id>
   <content type="html">&lt;p&gt;&lt;em&gt;This is the first post in a &lt;a href=&quot;/data-science-sql&quot;&gt;series of posts&lt;/a&gt;
about doing data science with SQL.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;In this post, I will go over the benefits of laying out data in a
relational database like &lt;a href=&quot;http://en.wikipedia.org/wiki/SQL&quot;&gt;SQL&lt;/a&gt;.
By way of a simple example, I will then go over the basics of how
to design a robust database and the concept of &lt;a href=&quot;http://en.wikipedia.org/wiki/Database_normalization&quot;&gt;database
normalization&lt;/a&gt;.  These
topics are essential in being able to design and interact effectively
with databases.&lt;/p&gt;

&lt;h2 id=&quot;a-simple-example-recipes-database&quot;&gt;A Simple Example Recipes Database&lt;/h2&gt;

&lt;p&gt;We will introduce these topics through a simple example.  Suppose
that we wanted to store information about recipes in a cookbook.&lt;/p&gt;

&lt;p&gt;The fundamental building block of SQL databases are two-dimensional
tables. This may seem like a limited design. But as you will
see, this limitation will become incredibly powerful.&lt;/p&gt;

&lt;p&gt;For our cookbook, each recipe will have a name. So we can begin by
creating a table of recipe names.  Our &lt;code&gt;recipes&lt;/code&gt; table will be:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;recipe_id&lt;/th&gt;
      &lt;th&gt;recipe_name&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;Tacos&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;Tomato Soup&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;Grilled Cheese&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;We associate a unique ID with each recipe so that we can connect
rows in this table to rows in other tables (more on this soon).&lt;/p&gt;

&lt;p&gt;Next, we need a table listing all the ingredients.
To make later examples more interesting,
we will also also assume that each ingredient
has a price. Our &lt;code&gt;ingredients&lt;/code&gt; table is:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;ingredient_id&lt;/th&gt;
      &lt;th&gt;ingredient_name&lt;/th&gt;
      &lt;th&gt;ingredient_price&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;Beef&lt;/td&gt;
      &lt;td&gt;5&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;Lettuce&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;Tomatoes&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;3&lt;/td&gt;
      &lt;td&gt;Taco Shell&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;4&lt;/td&gt;
      &lt;td&gt;Cheese&lt;/td&gt;
      &lt;td&gt;3&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;5&lt;/td&gt;
      &lt;td&gt;Milk&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;6&lt;/td&gt;
      &lt;td&gt;Bread&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Again, the ingredient IDs are to connect rows in this table to other
tables.  Finally, we need some way of listing what ingredients are
in each recipe.  Although we might naturally want to put this
information into the &lt;code&gt;recipe&lt;/code&gt; table, it is advantageous to use a third
table to store this information.&lt;/p&gt;

&lt;p&gt;Although it might seem cumbersome at first, a straightforward way
to store this information is to make another table listing all
(&lt;code&gt;recipe_id&lt;/code&gt;, &lt;code&gt;ingredient_id&lt;/code&gt;) pairs. I will discuss
in the next section why this is advantageous.&lt;/p&gt;

&lt;p&gt;To make the later examples more interesting, we will also
list an amount of each ingredient required in each recipe.
Our &lt;code&gt;recipe_ingredients&lt;/code&gt; table is:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;recipe_id&lt;/th&gt;
      &lt;th&gt;ingredient_id&lt;/th&gt;
      &lt;th&gt;amount&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;3&lt;/td&gt;
      &lt;td&gt;3&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;4&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;5&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;4&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;6&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Of course, this example is very simplified.  We could imagine that
a real database, like the one curated by &lt;a href=&quot;http://yummly.com&quot;&gt;yummly.com&lt;/a&gt;,
would have a lot more information (more tables, more columns, and
more rows).  But this example should be sufficient to allow for
interesting examples later.&lt;/p&gt;

&lt;p&gt;Before we move on, I will mention two bits of terminology common
to databases.  A &lt;a href=&quot;http://en.wikipedia.org/wiki/Database_schema&quot;&gt;schema&lt;/a&gt;
is the structure of the tables in the database. For our example,
our three tables make up the scheme of our recipes database.&lt;/p&gt;

&lt;p&gt;A &lt;a href=&quot;http://en.wikipedia.org/wiki/SQL#Queries&quot;&gt;query&lt;/a&gt; in SQL is a command
which retrieves data from a database. For example, we might
want to query the number of recipes in our database.&lt;/p&gt;

&lt;h2 id=&quot;how-to-normalize-your-database&quot;&gt;How to Normalize Your Database&lt;/h2&gt;

&lt;p&gt;At this point, you should be confused about why we laid out the
database across three tables and why we need all these strange IDs.
And finally, you might be wondering why each recipe-ingredient pair
has to take up an entire row in the &lt;code&gt;recipe_ingredients&lt;/code&gt; table.&lt;/p&gt;

&lt;p&gt;This leads us to the concept of &lt;a href=&quot;http://en.wikipedia.org/wiki/Database_normalization&quot;&gt;database
normalization&lt;/a&gt;.
Database normalization is the process of designing a database so
that every piece of information shows up in only one place in the
database.  This is the most important concept for designing effective
databases.&lt;/p&gt;

&lt;p&gt;In principle, we could directly cram all
three tables into one larger table:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;recipe_name&lt;/th&gt;
      &lt;th&gt;ingredient_name&lt;/th&gt;
      &lt;th&gt;amount&lt;/th&gt;
      &lt;th&gt;price&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;Tacos&lt;/td&gt;
      &lt;td&gt;Beef&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;5&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Tacos&lt;/td&gt;
      &lt;td&gt;Lettuce&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;…&lt;/td&gt;
      &lt;td&gt;…&lt;/td&gt;
      &lt;td&gt;…&lt;/td&gt;
      &lt;td&gt;…&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;This would be a denormalized table. &lt;/p&gt;

&lt;p&gt;But although it is easier to read, it is very fragile.  For example,
at some point in the future somebody might decide that they wanted
the tacos to be made of Chicken instead of beef. In the process of
updating the table, they might accidently change the name &lt;code&gt;Tacos&lt;/code&gt;
to &lt;code&gt;Taco&lt;/code&gt; in only one of the rows:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;recipe_name&lt;/th&gt;
      &lt;th&gt;ingredient_name&lt;/th&gt;
      &lt;th&gt;amount&lt;/th&gt;
      &lt;th&gt;price&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;Taco&lt;/td&gt;
      &lt;td&gt;Beef&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;5&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Tacos&lt;/td&gt;
      &lt;td&gt;Lettuce&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;…&lt;/td&gt;
      &lt;td&gt;…&lt;/td&gt;
      &lt;td&gt;…&lt;/td&gt;
      &lt;td&gt;…&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;A this point, our table would no longer be self consistent and this
could break all sorts of downstream queries.  Similar problems could
happen if our code crashed after updating half of the
rows. In addition, this schema also allows for the same ingredient to have
different prices in different recipes which shouldn’t be possible.&lt;/p&gt;

&lt;p&gt;Finding and fixing these sorts of bugs is costly, time consuming,
and frustrating. The benefit of having small tables linked by IDs
is that the IDs can be assumed to never change since they are only
used inside the database. On the other hand, important information
like names only show up in one place, avoiding inconsistencies and
allowing for easier and less-error-prone modifications.&lt;/p&gt;

&lt;p&gt;Another benefit of database normalization is that it scales nicely
to adding new kinds of information. For example, suppose we wanted
to store additional information about the steps needed to build the
recipe.  We could just create a new table which linked back to the
recipes by their ID. The &lt;code&gt;recipe_instructions&lt;/code&gt; table might look
like:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;recipe_id&lt;/th&gt;
      &lt;th&gt;step&lt;/th&gt;
      &lt;th&gt;step_description&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;Put the Taco Shells in the oven&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;Cook the beef in a pan on medium&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Being able to add new data without changing the existing
tables is much less error prone and potentially costly.&lt;/p&gt;

&lt;p&gt;Finally, if the extra data only existed for a limited number of
rows, this would be another win because we wouldn’t have to store
empty rows for all the missing data.&lt;/p&gt;

&lt;h2 id=&quot;why-do-tables-have-to-be-flat&quot;&gt;Why Do Tables Have to be Flat?&lt;/h2&gt;

&lt;p&gt;The limitation that SQL tables have to be flat may at first seem
very strange.  Although it should be clear that there is probably
some way to flattening out any data structure to fit into flat
tables, it is probably unclear why this is better than just allowing
nested data.&lt;/p&gt;

&lt;p&gt;Scripting languages like &lt;a href=&quot;https://www.ruby-lang.org/&quot;&gt;ruby&lt;/a&gt;,
&lt;a href=&quot;http://www.python.org/&quot;&gt;python&lt;/a&gt;, or &lt;a href=&quot;http://www.perl.org/&quot;&gt;perl&lt;/a&gt;
make it especially easy to nest data using dictionaries.  In python,
a common design for our recipes data might look like:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;python
recipes = {
  &quot;Tacos&quot;: (&quot;Beef&quot;, &quot;Lettuce&quot;, &quot;Tomatoes&quot;, 
            &quot;Taco Shell&quot;, &quot;Cheese&quot;),
  &quot;Tomato Soup&quot;: (&quot;Tomatoes&quot;, &quot;Milk&quot;),
  &quot;Grilled Cheese&quot;: (&quot;Cheese&quot;, &quot;Bread&quot;)
}
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Using this dictionary, it would be easy to find all the
ingredients for a particular recipe:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;python
soup_ingredients = recipes[&quot;Tomato Soup&quot;]
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;But the downside of this is that it would be expensive to ask other
questions about the data. For example, finding all the recipes with
a given ingredient would require looking through each recipe:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;python
tomato_recipes = [i for i in recipes.keys() \
            if &quot;Tomatoes&quot; in recipes[i]]
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;We could build a different data structure to make this other query
easier:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;python
recipes = {
    &quot;Beef&quot;: (&quot;Tacos&quot;),
    &quot;Lettuce&quot;: (&quot;Tacos&quot;),
    &quot;Tomatoes&quot;: (&quot;Tacos&quot;, &quot;Tomato Soup&quot;),
    &quot;Taco Shell&quot;: (&quot;Tacos&quot;),
    &quot;Cheese&quot;: (&quot;Tacos&quot;, &quot;Grilled Cheese&quot;),
    &quot;Milk&quot;: (&quot;Tomato Soup&quot;)
    &quot;Bread&quot;: (&quot;Grilled Cheese&quot;)
}
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;But this structure would make the first query more difficult!&lt;/p&gt;

&lt;p&gt;Although it seems strange at first, flattening out the tables ensures
that our data layout is not biased towards (or against) any particular
kind of query.  Instead, the designers of SQL optimized their
database to perform all kinds of different queries against flat
tables efficiently.  There is a good chance that what we will want
to query tomorrow is different from today, so this is a huge
advantage.&lt;/p&gt;

&lt;p&gt;As a final note, some newer databases like
&lt;a href=&quot;http://www.mongodb.com/&quot;&gt;MongoDB&lt;/a&gt; natively support storing nested
&lt;a href=&quot;http://json.org/&quot;&gt;JSON&lt;/a&gt;-like data structures.  Despite the caveats
mentioned above, in real-world situations sometimes this is a
necessity.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;In the &lt;a href=&quot;/install-mysql&quot;&gt;next post&lt;/a&gt; 
in this &lt;a href=&quot;/data-science-sql&quot;&gt;series of posts&lt;/a&gt;, 
I will explain how to install MySQL on your local machine to test out 
SQL commands.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;If you have any questions or comments, please post them below. If
you liked this post, you can
&lt;a href=&quot;https://twitter.com/intent/tweet?url=http://www.joshualande.com/database-normalization&amp;amp;text=Design a Better SQL Database With Database Normalization&amp;amp;via=joshualande&quot; target=&quot;_blank&quot;&gt;
  share it with your followers&lt;/a&gt; 
or 
&lt;a href=&quot;https://twitter.com/joshualande&quot;&gt;
  follow me on Twitter&lt;/a&gt;!&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>What Every Data Scientist Needs to Know about SQL</title>
   <link href="http://www.joshualande.com/data-science-sql"/>
   <updated>2014-04-17T00:00:00-04:00</updated>
   <id>http://www.joshualande.com/data-science-sql</id>
   <content type="html">&lt;p&gt;One of the most important tools required to be a successful data
scientist is relational databases like
&lt;a href=&quot;http://en.wikipedia.org/wiki/SQL&quot;&gt;SQL&lt;/a&gt;.  The majority of data
stored by businesses is in these relational databases. And in
addition, they are exceptionally good at storing complicated business
data sets as well as allowing for efficient information retrieval.
So having a strong understanding of relational databases is essential
to being an effective data scientist.&lt;/p&gt;

&lt;p&gt;In this series of posts, I will provide a broad overview of the key
topics required to successfully work with databases to do effective
data science. My hope is to take a breath-first search approach to
teaching by introducing the most important topics first.  Whenever
possible, I will attempt to avoid theory in favor of practicality
with the goal of getting you up to speed as quickly as possible.&lt;/p&gt;

&lt;p&gt;In these posts, I will focus on the &lt;a href=&quot;http://www.mysql.com/&quot;&gt;MySQL&lt;/a&gt;
database because it is popular, free, open source, and easy to get started
with. But the concepts and most of the commands are easily transferable
to other databases.&lt;/p&gt;

&lt;p&gt;The posts in this series are:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;/database-normalization&quot;&gt;Design a Better Database With Database Normalization&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

    &lt;p&gt;In this post, we will go over the design decisions behind
databases, how they are different from other programming languages
and data formats, and how to lay out our data so that it will
fit into a SQL database.  By way of a simple example, we will
go over the basics of database normalization, the best-practice
for correctly storing complex data in a database.  Despite being
a bit abstract and theoretical, these topics are absolutely
essential to understanding how databases work and why they are
so good at what they do. So this is a must read.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;/install-mysql&quot;&gt;How to Install MySQL On Your Local Machine&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

    &lt;p&gt;In this post, we will describe how to install MySQL on our local
machine. This will allow you to test out SQL by running SQL
queries against a test database. By the end of this post,
you will have MySQL running on your local machine.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;/create-tables-sql&quot;&gt;How to Create Tables and Insert Data into SQL Databases&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

    &lt;p&gt;In this post, we will go over the SQL commands required to create
tables in MySQL and insert data into them.  I will go over the
specific commands required to create the example database from
the &lt;a href=&quot;/database-normalization&quot;&gt;first post&lt;/a&gt; 
of the series. By the end of this post, you will have an
example database on you computer to run SQL queries against.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;/filters-joins-aggregations&quot;&gt;“Filters, Joins, Aggregations, and All That: A Guide to Querying in SQL”&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

    &lt;p&gt;In this post, we will go over the basics of querying data from
a database. Using the example from above, I will work through
successively harder queries show how the simple operations can
be combined write complicated queries.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;!--
3. **&quot;Indexing in SQL for the Rest of Us&quot;**

4. **&quot;How to Handle Missing Data in SQL Using NULL Values&quot;**

--&gt;

&lt;h2 id=&quot;further-sql-reading&quot;&gt;Further SQL Reading&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;SQL databases are designed to deal with &lt;code&gt;NULL&lt;/code&gt; values
in a sensible way. &lt;a href=&quot;http://dev.mysql.com/doc/refman/5.0/en/working-with-null.html&quot;&gt;Here&lt;/a&gt;
is some documentation about the way MySQL handles &lt;code&gt;NULL&lt;/code&gt; values.&lt;/li&gt;
  &lt;li&gt;Views in
SQL act as temporary tables able to simplify queries 
as well as abstract a user from the underlying table implementations. 
&lt;a href=&quot;http://dev.mysql.com/doc/refman/5.0/en/create-view.html&quot;&gt;Here&lt;/a&gt; 
is some documenation about how they are handled by MySQL.&lt;/li&gt;
  &lt;li&gt;Beyond &lt;a href=&quot;http://www.mysql.com/&quot;&gt;MySQL&lt;/a&gt;, there are several
high-performance parallel databases designed to deal with large data sets.
Two popular ones are &lt;a href=&quot;http://www.teradata.com/&quot;&gt;Terradata&lt;/a&gt; and
&lt;a href=&quot;http://www.vertica.com/&quot;&gt;HP Vertica&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;For very large data sets, &lt;a href=&quot;http://hadoop.apache.org/&quot;&gt;hadoop&lt;/a&gt;,
the &lt;a href=&quot;http://hadoop.apache.org/docs/r1.2.1/hdfs_design.html&quot;&gt;Hadoop Distributed File System (HDFS)&lt;/a&gt;,
and &lt;a href=&quot;https://hadoop.apache.org/docs/r1.2.1/mapred_tutorial.html&quot;&gt;MapReduce&lt;/a&gt; 
are typically used to store and analyze these large data sets. 
&lt;a href=&quot;http://hive.apache.org/&quot;&gt;Apache Hive&lt;/a&gt; is an implementation of
SQL on top of MapReduce which brings the power of SQL to hadoop.
&lt;a href=&quot;https://pig.apache.org/&quot;&gt;Apache Pig&lt;/a&gt; and &lt;a href=&quot;https://github.com/twitter/scalding&quot;&gt;Scalding&lt;/a&gt;
are similar competitors.&lt;/li&gt;
  &lt;li&gt;Bill Howe’s coursera class 
&lt;a href=&quot;https://www.coursera.org/course/datasci&quot;&gt;Introduction to Data Science&lt;/a&gt;
has a good discussion of SQL query optimizers in his lectures on
“&lt;a href=&quot;https://class.coursera.org/datasci-001/lecture/preview&quot;&gt;Relational Databases, Relational Algebra&lt;/a&gt;”.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you have any questions or comments, please post them below. If
you liked this post, you can
&lt;a href=&quot;https://twitter.com/intent/tweet?url=http://www.joshualande.com/data-science-sql&amp;amp;text=What Every Data Scientist Needs to Know about SQL&amp;amp;via=joshualande&quot; target=&quot;_blank&quot;&gt;
  share it with your followers&lt;/a&gt; 
or 
&lt;a href=&quot;https://twitter.com/joshualande&quot;&gt;
  follow me on Twitter&lt;/a&gt;!&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>How to Read and Write JSON-formatted Data With Apache Pig</title>
   <link href="http://www.joshualande.com/read-write-json-apache-pig"/>
   <updated>2014-04-16T00:00:00-04:00</updated>
   <id>http://www.joshualande.com/read-write-json-pig</id>
   <content type="html">&lt;p&gt;In this post, I will explain how to use the &lt;code&gt;JsonStorage&lt;/code&gt; and
&lt;code&gt;JsonLoader&lt;/code&gt; objects in &lt;a href=&quot;http://pig.apache.org&quot;&gt;Apache Pig&lt;/a&gt; to read
and write &lt;a href=&quot;www.json.org&quot;&gt;JSON&lt;/a&gt;-formatted data.&lt;/p&gt;

&lt;h2 id=&quot;reading-json-formatted-data-with-jsonloader&quot;&gt;Reading JSON-Formatted Data With JsonLoader&lt;/h2&gt;

&lt;p&gt;Apache Pig can read JSON-formatted data if it is in a particular
format.  Each row in the file has to be a JSON dictionary where the
keys specify the column names and the values specify the table
content.&lt;/p&gt;

&lt;p&gt;For example, supposed our data had three columns called &lt;code&gt;food&lt;/code&gt;,
&lt;code&gt;person&lt;/code&gt;, and &lt;code&gt;amount&lt;/code&gt;. We can store this data in &lt;code&gt;first_table.json&lt;/code&gt;
as:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;json
{&quot;food&quot;:&quot;Tacos&quot;, &quot;person&quot;:&quot;Alice&quot;, &quot;amount&quot;:3}
{&quot;food&quot;:&quot;Tomato Soup&quot;, &quot;person&quot;:&quot;Sarah&quot;, &quot;amount&quot;:2}
{&quot;food&quot;:&quot;Grilled Cheese&quot;, &quot;person&quot;:&quot;Alex&quot;, &quot;amount&quot;:5}
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;We can then load the file using &lt;code&gt;JsonLoader&lt;/code&gt; as: &lt;/p&gt;

&lt;p&gt;&lt;code&gt;
second_table = LOAD &#39;second_table.json&#39; 
    USING JsonLoader(&#39;food:chararray, person:chararray, amount:int&#39;);
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Here, &lt;code&gt;&#39;food:chararray, person:chararray, amount:int&#39;&lt;/code&gt; is the Pig
schema for the data.&lt;/p&gt;

&lt;p&gt;This creates the expected table:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;food&lt;/th&gt;
      &lt;th&gt;person&lt;/th&gt;
      &lt;th&gt;amount&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;Tacos&lt;/td&gt;
      &lt;td&gt;Alice&lt;/td&gt;
      &lt;td&gt;3&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Tomato Soup&lt;/td&gt;
      &lt;td&gt;Sarah&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Grilled Cheese&lt;/td&gt;
      &lt;td&gt;Alex&lt;/td&gt;
      &lt;td&gt;5&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;reading-nested-data&quot;&gt;Reading Nested Data&lt;/h2&gt;

&lt;p&gt;What is nice is that JSON and Pig both support nesting data.  We
can store both bags of data and tuples in JSON and have them read
into Pig.  Pig expects tuples to be stored in JSON as dictionaries
and bags as lists of dictionaries. In our next example, &lt;code&gt;third_table.json&lt;/code&gt;
contains rows with both a bag and a tuple:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;json
{&quot;recipe&quot;:&quot;Tacos&quot;,&quot;ingredients&quot;:[{&quot;name&quot;:&quot;Beef&quot;},{&quot;name&quot;:&quot;Lettuce&quot;},{&quot;name&quot;:&quot;Cheese&quot;}],&quot;inventor&quot;:{&quot;name&quot;:&quot;Alex&quot;,&quot;age&quot;:25}}
{&quot;recipe&quot;:&quot;TomatoSoup&quot;,&quot;ingredients&quot;:[{&quot;name&quot;:&quot;Tomatoes&quot;},{&quot;name&quot;:&quot;Milk&quot;}],&quot;inventor&quot;:{&quot;name&quot;:&quot;Steve&quot;,&quot;age&quot;:23}}
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Notice that for the first row, the &lt;code&gt;ingredients&lt;/code&gt; bag is stored as
a list of dictionaries (&lt;code&gt;[{&quot;name&quot;:&quot;Beef&quot;},{&quot;name&quot;:&quot;Lettuce&quot;},{&quot;name&quot;:&quot;Cheese&quot;}]&lt;/code&gt;).
Similarly, the &lt;code&gt;inventor&lt;/code&gt; tuple is stored as a dictionary (&lt;code&gt;{&quot;name&quot;:&quot;Alex&quot;,&quot;age&quot;:25}&lt;/code&gt;).&lt;/p&gt;

&lt;p&gt;We can read this data in Pig by specifying a more complicated schema:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;
third_table = LOAD &#39;third_table.json&#39; 
    USING JsonLoader(&#39;recipe:chararray, 
                      ingredients: {(name:chararray)}, 
                      inventor: (name:chararray, age:int)&#39;);
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;We can &lt;code&gt;DUMP&lt;/code&gt; this data using Pig to ensure that the data is loaded
correctly:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;
(Tacos,{(Beef),(Lettuce),(Cheese)},(Alex,25))
(Tomato Soup,{(Tomatoes),(Milk)},(Steve,23))
&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&quot;writing-json-formatted-data-with-jsonstorage&quot;&gt;Writing JSON-Formatted Data With JsonStorage&lt;/h2&gt;

&lt;p&gt;Finally, we can write JSON-formatted data using &lt;code&gt;JsonStorage&lt;/code&gt;.  Imagine we
had a simple &lt;a href=&quot;http://en.wikipedia.org/wiki/Comma-separated_values&quot;&gt;CSV&lt;/a&gt;
file &lt;code&gt;first_table.dat&lt;/code&gt;:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;
cat &amp;gt; first_table.dat
Tacos
Tomato Soup
Grilled Cheese
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;We can read it into Pig using &lt;code&gt;PigStorage&lt;/code&gt; and then save it out
using &lt;code&gt;JsonStorage&lt;/code&gt;:&lt;/p&gt;

&lt;p&gt;```
first_table = LOAD ‘first_table.dat’ 
    USING PigStorage() 
    AS (col1:chararray);&lt;/p&gt;

&lt;p&gt;…&lt;/p&gt;

&lt;p&gt;STORE first_table 
    INTO ‘first_table.json’ 
    USING JsonStorage();
```&lt;/p&gt;

&lt;p&gt;As is the convention in HDFS, the output is a folder called
&lt;code&gt;first_table.json&lt;/code&gt;. Inside the folder is a file called &lt;code&gt;part-m-00000&lt;/code&gt;
that contains the data in JSON format:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;json
{&quot;col1&quot;:&quot;Tacos&quot;}
{&quot;col1&quot;:&quot;Tomato Soup&quot;}
{&quot;col1&quot;:&quot;Grilled Cheese&quot;}
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;If the job had lots of output data, it would be spread across
additional files like &lt;code&gt;part-m-00001&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Pig also wrote out an intermediate file in the folder called
&lt;code&gt;.pig_schema&lt;/code&gt; that explicitly specifies the schema of the output
data:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;
{&quot;fields&quot;:[{&quot;name&quot;:&quot;col1&quot;,&quot;type&quot;:55,&quot;description&quot;:&quot;autogenerated from Pig Field Schema&quot;,&quot;schema&quot;:null}],&quot;version&quot;:0,&quot;sortKeys&quot;:[],&quot;sortKeyOrders&quot;:[]}
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;This file allows the table to be read in by subsequent Pig jobs
without explicitly specifying the schema.&lt;/p&gt;

&lt;p&gt;If you have any questions or comments, please post them below. If
you liked this post, you can
&lt;a href=&quot;https://twitter.com/intent/tweet?url=http://www.joshualande.com/read-write-json-apache-pig&amp;amp;text=How to Read and Write JSON-formatted Data With Apache Pig&amp;amp;via=joshualande&quot; target=&quot;_blank&quot;&gt;
  share it with your followers&lt;/a&gt; 
or 
&lt;a href=&quot;https://twitter.com/joshualande&quot;&gt;
  follow me on Twitter&lt;/a&gt;!&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>How to Set Short URLs in Jekyll with Github Pages</title>
   <link href="http://www.joshualande.com/short-urls-jekyll"/>
   <updated>2014-04-03T00:00:00-04:00</updated>
   <id>http://www.joshualande.com/short-urls-jekyll</id>
   <content type="html">&lt;p&gt;In this post, I will describe how to make the URLs for your blog
posts (what Jekyll calls permalinks) short and minimal.  For
example, I wanted the URL for this post to be
&lt;a href=&quot;http://www.joshualande.com/short-urls-jekyll&quot;&gt;joshualande.com/short-urls-jekyll&lt;/a&gt;
without any tags, dates, or other extra characters.  This url is
short, looks nice, and is easy to share. I also read &lt;a href=&quot;http://davidtuite.com/posts/how-to-manage-permalinks-in-jekyll&quot;&gt;some
speculation&lt;/a&gt;
that smaller URLs help with
&lt;a href=&quot;http://en.wikipedia.org/wiki/Search_engine_optimization&quot;&gt;SEO&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The &lt;a href=&quot;http://jekyllrb.com/docs/permalinks/&quot;&gt;Jekyll documentation&lt;/a&gt;,
discusses the ability to set permalink to &lt;code&gt;none&lt;/code&gt; in the &lt;code&gt;_config.yml&lt;/code&gt;
file:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;yaml
permalink: none
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;But this created URLs like
&lt;a href=&quot;http://www.joshualande.com/short-urls-jekyll.html&quot;&gt;joshualande.com/short-urls-jekyll.html&lt;/a&gt;
and I didn’t want my URLs ending in “.html”.&lt;/p&gt;

&lt;p&gt;Next, I tried setting the permalink value to “/:title” in &lt;code&gt;_config.yml&lt;/code&gt;:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;yaml
permalink: &quot;/:title&quot;
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;This appeared to work, but broke the static pages I had setup (like
&lt;a href=&quot;http://www.joshualande.com/about&quot;&gt;joshualande.com/about&lt;/a&gt;).  I could move all
the static pages to just be blog posts, but that would have broken
&lt;a href=&quot;http://www.joshualande.com/archive/&quot;&gt;my archive&lt;/a&gt; of blog posts which
should not include static pages.&lt;/p&gt;

&lt;p&gt;Finally, I realized that I could get my desired result without messing
up static pages by explicitly setting the &lt;code&gt;permalink&lt;/code&gt; key
in the YAML metadata of each post. For this post, I set:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;yaml
permalink: short-urls-jekyll
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;It is unfortunate that you have to explicitly set this at the top
of each blog post. But this does work, giving me beautiful URLs
like
&lt;a href=&quot;http://www.joshualande.com/short-urls-jekyll&quot;&gt;joshualande.com/short-urls-jekyll&lt;/a&gt;.
Please comment below if you know of a simpler way to way to do this.&lt;/p&gt;

&lt;p&gt;Finally, if you already have existing permalinks and want them
to redirect to your new url, you can do this by following the
instructions on &lt;a href=&quot;/redirect-urls-jekyll-github&quot;&gt;this blog post&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;If you have any questions or comments, please post them below. If
you liked this post, you can
&lt;a href=&quot;https://twitter.com/intent/tweet?url=http://www.joshualande.com/short-urls-jekyll&amp;amp;text=How to Set Short URLs in Jekyll with Github Pages&amp;amp;via=joshualande&quot; target=&quot;_blank&quot;&gt;
  share it with your followers&lt;/a&gt; 
or 
&lt;a href=&quot;https://twitter.com/joshualande&quot;&gt;
  follow me on Twitter&lt;/a&gt;!&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>How to Redirect URLs in Jekyll Using Github Pages and the jekyll-redirect-from Plugin</title>
   <link href="http://www.joshualande.com/redirect-urls-jekyll-github"/>
   <updated>2014-04-02T00:00:00-04:00</updated>
   <id>http://www.joshualande.com/redirect-permalink-jekyll-github</id>
   <content type="html">&lt;p&gt;When changing the permalink structure of your blog or migrating
your blog from one blogging platform to another, you often want to
change the permalink structure of your blog but keep the old
URLs and have them redirect to the new pages.
This will allow you to preserve your 
Google search rankings, tweet history, SEO, etc.&lt;/p&gt;

&lt;p&gt;Fortunately, Github Pages makes this really
easy because they
&lt;a href=&quot;https://github.com/blog/1797-repository-metadata-and-plugin-support-for-github-pages&quot;&gt;recently&lt;/a&gt;
enabled support for the
&lt;a href=&quot;https://github.com/jekyll/jekyll-redirect-from&quot;&gt;jekyll-redirect-from&lt;/a&gt;
plugin.  To get these URLs to redirect, all you have to do is:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Install jekyll-redirect-from. To do that, I ran the command&lt;/p&gt;

    &lt;p&gt;&lt;code&gt;yaml
gem install jekyll-redirect-from --source http://rubygems.org
&lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Include this plugin in Jekyll by adding to your &lt;code&gt;_config.yml&lt;/code&gt;:&lt;/p&gt;

    &lt;p&gt;&lt;code&gt;yaml
gems:
  - jekyll-redirect-from
&lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Add to the YAML metadata of the post a line describing the old URL which should
be redirected.
For example, if the
original URL for this post was
&lt;a href=&quot;joshualande.com/2014/04/02/minimal-urls-jekyll&quot;&gt;joshualande.com/2014/04/02/minimal-urls-jekyll&lt;/a&gt;,
then we could redirect that URL to the new URL 
by adding a line to the YAML metadata of this blog post:&lt;/p&gt;

    &lt;p&gt;&lt;code&gt;yaml
redirect_from: &quot;/2014/04/02/minimal-urls-jekyll/&quot;
&lt;/code&gt;&lt;/p&gt;

    &lt;p&gt;jekyll-redirect-from is further documented &lt;a href=&quot;https://help.github.com/articles/redirects-on-github-pages&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Finally, if you use &lt;a href=&quot;http://disqus.com/&quot;&gt;DISQUS&lt;/a&gt; to host comments
on your blog, you will have to explicitly tell Jekyll that you
changed the URLs for your blog posts.  DISQUS provide an easy URL
Mapper which is documented
&lt;a href=&quot;http://help.disqus.com/customer/portal/articles/912757-url-mapper&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you have any questions or comments, please post them below. If
you liked this post, you can
&lt;a href=&quot;https://twitter.com/intent/tweet?url=http://www.joshualande.com/redirect-urls-jekyll-github&amp;amp;text=How to Redirect URLs in Jekyll Using Github Pages and the jekyll-redirect-from Plugin&amp;amp;via=joshualande&quot; target=&quot;_blank&quot;&gt;
  share it with your followers&lt;/a&gt; 
or 
&lt;a href=&quot;https://twitter.com/joshualande&quot;&gt;
  follow me on Twitter&lt;/a&gt;!&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>A Simple Explanation of COGROUP in Apache Pig</title>
   <link href="http://www.joshualande.com/cogroup-in-pig"/>
   <updated>2014-03-27T00:00:00-04:00</updated>
   <id>http://www.joshualande.com/cogroup-apache-pig</id>
   <content type="html">&lt;p&gt;The &lt;code&gt;COGROUP&lt;/code&gt; command in Apache Pig is somewhat confusing because
it is sort of both a &lt;code&gt;GROUP&lt;/code&gt; and a &lt;code&gt;JOIN&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&quot;cogroup-one-table&quot;&gt;COGROUP One Table&lt;/h2&gt;

&lt;p&gt;In its simplest form, &lt;code&gt;COGROUP&lt;/code&gt; is exactly the same as &lt;code&gt;GROUP&lt;/code&gt;.  It
groups rows based on a column, and creates bags for each group.&lt;/p&gt;

&lt;p&gt;For example, assume we have a data set of animal owners:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;bash
$ cat &amp;gt; owners.csv
adam,cat
adam,dog
alex,fish
alice,cat
steve,dog
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;We could &lt;code&gt;COGROUP&lt;/code&gt; on animal using the Pig code:&lt;/p&gt;

&lt;p&gt;```
owners = LOAD ‘owners.csv’ 
    USING PigStorage(‘,’)
    AS (owner:chararray,animal:chararray);&lt;/p&gt;

&lt;p&gt;grouped = COGROUP owners BY animal;
DUMP grouped;
```&lt;/p&gt;

&lt;p&gt;This returns a list of animals. For each animal, Pig groups the
matching rows into bags.  The resulting table &lt;code&gt;grouped&lt;/code&gt; is:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;group&lt;/th&gt;
      &lt;th&gt;owners&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;cat&lt;/td&gt;
      &lt;td&gt;{(adam,cat),(alice,cat)}&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;dog&lt;/td&gt;
      &lt;td&gt;{(adam,dog),(steve,dog)}&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;fish&lt;/td&gt;
      &lt;td&gt;{(alex,fish)}&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;cogroup-two-tables&quot;&gt;COGROUP Two Tables&lt;/h2&gt;

&lt;p&gt;Where &lt;code&gt;COGROUP&lt;/code&gt; gets fancy is that you can &lt;code&gt;COGROUP&lt;/code&gt; on two tables
at once. Pig will group the two tables and then join the two tables
on the grouped column.  For example, assume we also had a data set
of pet names:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;bash
$ cat &amp;gt; pets.csv
nemo,fish
fido,dog
rex,dog
paws,cat
wiskers,cat
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Given this table, we could compare for example all the people with
a given animal to all the names of that animal.  The &lt;code&gt;COGROUP&lt;/code&gt;
command is:&lt;/p&gt;

&lt;p&gt;```
owners = LOAD ‘owners.csv’ 
    USING PigStorage(‘,’)
    AS (owner:chararray,animal:chararray);&lt;/p&gt;

&lt;p&gt;pets = LOAD ‘pets.csv’ 
    USING PigStorage(‘,’)
    AS (name:chararray,animal:chararray);&lt;/p&gt;

&lt;p&gt;grouped = COGROUP owners BY animal, pets by animal;
DUMP grouped;
```&lt;/p&gt;

&lt;p&gt;This will group each table based on the &lt;code&gt;animal&lt;/code&gt; column.  For each
animal, it will create a bag of matching rows from both tables.  For
this example, we get:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;group&lt;/th&gt;
      &lt;th&gt;owners&lt;/th&gt;
      &lt;th&gt;pets&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;cat&lt;/td&gt;
      &lt;td&gt;{(adam,cat),(alice,cat)}&lt;/td&gt;
      &lt;td&gt;{(paws,cat),(wiskers,cat)}&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;dog&lt;/td&gt;
      &lt;td&gt;{(adam,dog),(steve,dog)}&lt;/td&gt;
      &lt;td&gt;{(fido,dog),(rex,dog)}&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;fish&lt;/td&gt;
      &lt;td&gt;{(alex,fish)}&lt;/td&gt;
      &lt;td&gt;{(nemo,fish)}&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;In summary, you can use &lt;code&gt;COGROUP&lt;/code&gt; when you need to group two tables
by a column and then join on the grouped column.&lt;/p&gt;

&lt;p&gt;If you have any questions or comments, please post them below. If
you liked this post, you can
&lt;a href=&quot;https://twitter.com/intent/tweet?url=http://www.joshualande.com/cogroup-in-pig&amp;amp;text=A Simple Explanation of COGROUP in Apache Pig&amp;amp;via=joshualande&quot; target=&quot;_blank&quot;&gt;
  share it with your followers&lt;/a&gt; 
or 
&lt;a href=&quot;https://twitter.com/joshualande&quot;&gt;
  follow me on Twitter&lt;/a&gt;!&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>CUBE and ROLLUP: Two Apache Pig Functions That Every Data Scientist Should Know</title>
   <link href="http://www.joshualande.com/cube-rollup-pig-data-science"/>
   <updated>2014-02-11T00:00:00-05:00</updated>
   <id>http://www.joshualande.com/cube-rollup-pig-data-science</id>
   <content type="html">&lt;p&gt;&lt;img src=&quot;/assets/pig_logo.jpg&quot; alt=&quot;The Apache Pig Logo&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I recently found two incredible functions in 
&lt;a href=&quot;https://pig.apache.org&quot;&gt;Apache Pig&lt;/a&gt; called 
&lt;a href=&quot;https://pig.apache.org/docs/r0.11.0/api/org/apache/pig/newplan/logical/relational/LOCube.html&quot;&gt;CUBE and ROLLUP&lt;/a&gt;
that every data scientist should know.
These functions can be used to compute multi-level
aggregations of a data set. I found the documentation for these
functions to be confusing, so I will work through
a simple example to explain how they work.&lt;/p&gt;

&lt;h2 id=&quot;aggregating-in-pig-using-the-group-operator&quot;&gt;Aggregating in Pig Using the GROUP Operator&lt;/h2&gt;

&lt;p&gt;Before we get into &lt;code&gt;CUBE&lt;/code&gt; and &lt;code&gt;ROLLUP&lt;/code&gt;, I will describe how to do simple
aggregations using the &lt;code&gt;GROUP BY&lt;/code&gt; operator in pig.  If this is
familiar to you, feel free to skip ahead to the next section.&lt;/p&gt;

&lt;p&gt;Imagine a simple data set of people where for
each person we know their name, the country they live in, their
gender, the sport they play, and their height.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;
$ cat people.csv
Steve,US,M,football,6.5
Alex,US,M,football,5.5
Ted,UK,M,football,6.0
Mary,UK,F,baseball,5.5
Ellen,UK,F,football,5.0
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;A common task in analytics is to compute the average
value (or some other aggregate quantity like median or maximum)
for people in different groups.
For example, we might be interested in computing
the average height of people in a given country.&lt;/p&gt;

&lt;p&gt;We can do this using Pig fairly easily.
First, we load in the data:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;
people = LOAD &#39;people.csv&#39; USING PigStorage(&#39;,&#39;) 
    AS (name:chararray, country:chararray, 
    gender:chararray, sport:chararray, height:float);
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;You can follow along by running pig in local mode with with the 
command:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;
pig -x local
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;First, we should &lt;code&gt;DUMP&lt;/code&gt; the &lt;code&gt;people&lt;/code&gt; table to make sure we
loaded it correctly:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;
(Steve,US,M,football,6.5)
(Alex,US,M,football,5.5)
(Ted,UK,M,football,6.0)
(Mary,UK,F,baseball,5.5)
(Ellen,UK,F,football,5.0)
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;In order to compute the average height for people of a given gender,
we have to first group the data by gender:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;
grouped = GROUP people BY gender;
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;GROUP&lt;/code&gt; operator returns, for each gender,
a bag 
containing all of the rows for people of that gender.
For our example, the &lt;code&gt;grouped&lt;/code&gt; table is:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;
(F,{(Mary,UK,F,baseball,5.5),(Ellen,UK,F,football,5.0)})
(M,{(Steve,US,M,football,6.5),(Alex,US,M,football,5.5),(Ted,UK,M,football,6.0)})
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;To compute the average height,
we can then use the &lt;code&gt;FOREACH&lt;/code&gt; and &lt;code&gt;AVG&lt;/code&gt; command.
While we are at it, we can compute the
number of people with the &lt;code&gt;COUNT&lt;/code&gt; command:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;
heights = FOREACH grouped GENERATE
    group AS gender,
    COUNT(people) AS num_people,
    AVG(people.height) AS avg_height;
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;heights&lt;/code&gt; table is:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;
(F,2,5.25)
(M,3,6.0)
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;This shows that there are 3 men with an average height of 6.0 and two 
women with an average height of 5.25.&lt;/p&gt;

&lt;p&gt;If we wanted to compute the average height for people 
of a particular gender who played a particular sport, we could again 
expand upon the &lt;code&gt;GROUP BY&lt;/code&gt; command from above:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;
grouped = GROUP people BY (gender,sport);
heights = FOREACH grouped GENERATE
    FLATTEN(group) AS (gender,sport),
    COUNT(people) AS num_people,
    AVG(people.height) AS avg_height;
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;heights&lt;/code&gt; table now contains:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;
(F,baseball,1,5.5)
(F,football,1,5.0)
(M,football,3,6.0)
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;This says, for example, that there are three men who play football with
an average height of 6.0.&lt;/p&gt;

&lt;h2 id=&quot;multi-level-aggregations-in-pig-the-hard-way&quot;&gt;Multi-Level Aggregations in Pig the Hard Way&lt;/h2&gt;

&lt;p&gt;What if both aggregations were important. Suppose we wanted
to know both the average height by gender as well as the average
height by gender and by sport.  One way to solve this is to simply
create two tables, one for each aggregation. But
this is cumbersome, especially if there were many interesting
dimensions to aggregate over. &lt;/p&gt;

&lt;p&gt;Another thing we could do is a weighted average of
the average by height and gender to compute the average by gender.
But this is inelegant, will slow down any future queries on the
data set by requiring an additional aggregation, and will not work
for more sophisticated aggregate quantities like median or quantiles.&lt;/p&gt;

&lt;p&gt;Another option would be to create a duplicate set of rows in our
&lt;code&gt;people&lt;/code&gt; table where the gender is hard coded to a default value
like a star.  Then, when we computed the average height by gender and
by sport we would automatically also compute the average height by just
gender (where sport is equal to a star).&lt;/p&gt;

&lt;p&gt;To do this, we can create a new table and &lt;code&gt;UNION&lt;/code&gt; it
with the original table:&lt;/p&gt;

&lt;p&gt;```
agg_people = FOREACH people GENERATE
    name, 
    country, 
    gender, 
    ‘*’ AS sport, 
    height;&lt;/p&gt;

&lt;p&gt;unioned_people = UNION people, agg_people;&lt;/p&gt;

&lt;p&gt;grouped = GROUP unioned_people BY (gender,sport);
heights = FOREACH grouped GENERATE
    FLATTEN(group) AS (gender,sport),
    COUNT(unioned_people) AS num_people,
    AVG(unioned_people.height) AS avg_height;
```&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;heights&lt;/code&gt; table now contains&lt;/p&gt;

&lt;p&gt;&lt;code&gt;
(F,*,2,5.25)
(F,baseball,1,5.5)
(F,football,1,5.0)
(M,*,3,6.0)
(M,football,3,6.0)
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;As you can see, this table nicely combines both data sets from above.
The average height by gender for people of any sport
can be found by looking for rows where sport equals ‘*’.&lt;/p&gt;

&lt;h2 id=&quot;cube-and-rollup-for-multi-level-aggregations&quot;&gt;CUBE And ROLLUP For Multi-Level Aggregations&lt;/h2&gt;

&lt;p&gt;This &lt;code&gt;UNION&lt;/code&gt; approach above works, but it is not very elegant. It
suffers from the limitations that it requires a lot of extra code, does not 
generalize easily to performing aggregations
over multiple dimensions, and is not well optimized by Pig.&lt;/p&gt;

&lt;p&gt;Fortunately, as of version 0.11, Apache Pig provides the &lt;code&gt;CUBE&lt;/code&gt; and
&lt;code&gt;ROLLUP&lt;/code&gt; function which can perform this kind of calculation much
more efficiently and elegantly.&lt;/p&gt;

&lt;p&gt;For the same &lt;code&gt;people&lt;/code&gt; table from before, we
can compute the different possible aggregations by
gender and sport using the code:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;
cubed = CUBE people BY CUBE(gender, sport);
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;cubed&lt;/code&gt; table is:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;
((F,baseball),{(F,baseball,Mary,UK,5.5)})
((F,football),{(F,football,Ellen,UK,5.0)})
((F,),{(F,,Mary,UK,5.5),(F,,Ellen,UK,5.0)})
((M,football),{(M,football,Alex,US,5.5),(M,football,Ted,UK,6.0),(M,football,Steve,US,6.5)})
((M,),{(M,,Alex,US,5.5),(M,,Steve,US,6.5),(M,,Ted,UK,6.0)})
((,baseball),{(,baseball,Mary,UK,5.5)})
((,football),{(,football,Ted,UK,6.0),(,football,Steve,US,6.5),(,football,Alex,US,5.5),(,football,Ellen,UK,5.0)})
((,),{(,,Mary,UK,5.5),(,,Alex,US,5.5),(,,Steve,US,6.5),(,,Ellen,UK,5.0),(,,Ted,UK,6.0)})
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Although this is hard to look at, you will see that the first column
contains the possible values for cubed columns.
The second column contains bags of all the rows matching that
aggregation.
This is almost identical to the way &lt;code&gt;GROUP BY&lt;/code&gt; works except that 
some of the rows now contain &lt;code&gt;NULL&lt;/code&gt; values (corresponding 
to aggregations over that column.&lt;/p&gt;

&lt;p&gt;To compute the average height as above, we can again use the &lt;code&gt;FOREACH&lt;/code&gt; and &lt;code&gt;AVG&lt;/code&gt; operators:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;
heights = FOREACH cubed GENERATE 
    FLATTEN(group) AS (gender, sport), 
    COUNT_STAR(cube) AS num_people,
    AVG(cube.height) AS avg_height;  
&lt;/code&gt; &lt;/p&gt;

&lt;p&gt;The &lt;code&gt;heights&lt;/code&gt; table now contains:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;
(F,baseball,1,5.5)
(F,football,1,5.0)
(F,,2,5.25)
(M,football,3,6.0)
(M,,3,6.0)
(,baseball,1,5.5)
(,football,4,5.75)
(,,5,5.7)
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;This table is the same as above, but also
computes the average per sport for all genders
and the average over all genders and all sports.&lt;/p&gt;

&lt;p&gt;Note that in this example we changed
from using the &lt;code&gt;COUNT&lt;/code&gt; to &lt;code&gt;COUNT_STAR&lt;/code&gt;
function. The reason is that the
&lt;code&gt;COUNT&lt;/code&gt; function in Pig will not count
rows with &lt;code&gt;NULL&lt;/code&gt; values in it whereas
&lt;code&gt;COUNT_STAR&lt;/code&gt; includes those rows.&lt;/p&gt;

&lt;p&gt;Unlike the example above, &lt;code&gt;CUBE&lt;/code&gt; sets the
aggregate value to &lt;code&gt;NULL&lt;/code&gt; instead of a star.
I find this annoying and prefer to use the star 
symbol. We can fix this in Pig:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;
heights  = FOREACH heights GENERATE
    (gender is not NULL ? gender : &#39;*&#39;) as gender, 
    (sport is not NULL ? sport : &#39;*&#39;) as sport,
    num_people,
    avg_height;
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;heights&lt;/code&gt; table finally contains:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;
(F,baseball,1,5.5)
(F,football,1,5.0)
(F,*,2,5.25)
(M,football,3,6.0)
(M,*,3,6.0)
(*,baseball,1,5.5)
(*,football,4,5.75)
(*,*,5,5.7)
&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&quot;cubeing-over-multiple-dimensions&quot;&gt;CUBEing Over Multiple Dimensions&lt;/h2&gt;

&lt;p&gt;What is really great about &lt;code&gt;CUBE&lt;/code&gt; is
the ability to cube over multiple dimensions.
It isn’t much harder using &lt;code&gt;CUBE&lt;/code&gt;
to compute
all possible aggregations
of country, gender, and sport:&lt;/p&gt;

&lt;p&gt;```
cubed = CUBE people BY CUBE(country,gender,sport);&lt;/p&gt;

&lt;p&gt;heights = FOREACH cubed GENERATE 
    FLATTEN(group) AS (country,gender,sport),
    COUNT_STAR(cube) As num_people,
    AVG(cube.height) AS avg_height;  &lt;/p&gt;

&lt;p&gt;heights = FOREACH heights GENERATE
    (country is not NULL ? country : ‘&lt;em&gt;’) as country, 
    (gender is not NULL ? gender : ‘&lt;/em&gt;’) as gender, 
    (sport is not NULL ? sport : ‘*’) as sport,
    num_people,
    avg_height;
```&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;heights&lt;/code&gt; table now contains the average height for all
possible aggregations of the three columns:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;
(UK,F,baseball,1,5.5)
(UK,F,football,1,5.0)
(UK,F,*,2,5.25)
(UK,M,football,1,6.0)
(UK,M,*,1,6.0)
(UK,*,baseball,1,5.5)
(UK,*,football,2,5.5)
(UK,*,*,3,5.5)
(US,M,football,2,6.0)
(US,M,*,2,6.0)
(US,*,football,2,6.0)
(US,*,*,2,6.0)
(*,F,baseball,1,5.5)
(*,F,football,1,5.0)
(*,F,*,2,5.25)
(*,M,football,3,6.0)
(*,M,*,3,6.0)
(*,*,baseball,1,5.5)
(*,*,football,4,5.75)
(*,*,*,5,5.7)
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Here &lt;code&gt;CUBE&lt;/code&gt; computed all aggregations for a
particular country, gender, and sport. But it also computed all
aggregations for a particular country and gender (but any sport),
country and sport (but any gender), and gender and sport (but any
country).  It also computed all aggregations for a particular country
(but any gender and sport), a particular gender (but any country
and sport), and for a particular sport (but any gender and country)
And finally, it computed the aggregation over all people.&lt;/p&gt;

&lt;p&gt;From this table, we see that the average height of all football
players is 5.75, the average height of all people in the US is 6.0,
and the average height of all football players in the US is 6.0.&lt;/p&gt;

&lt;h2 id=&quot;the-rollup-operator&quot;&gt;The ROLLUP Operator&lt;/h2&gt;

&lt;p&gt;The &lt;code&gt;ROLLUP&lt;/code&gt; operator is similar to &lt;code&gt;CUBE&lt;/code&gt;,
but will only perform hierarchical
aggregations. For our example,
&lt;code&gt;ROLLUP&lt;/code&gt; of country, gender, and sport
will perform all aggregations for a particular
country, gender, and sport.
Then it will perform all aggregations for
a particular country and gender (but any sport).
Then it will perform all aggregations for a particular
country (but for any gender and sport). And
finally it will compute an aggregation for all
people.&lt;/p&gt;

&lt;p&gt;To &lt;code&gt;ROLLUP&lt;/code&gt; our example from above:&lt;/p&gt;

&lt;p&gt;```
rolledup = CUBE people BY ROLLUP(country,gender,sport);&lt;/p&gt;

&lt;p&gt;heights = FOREACH rolledup GENERATE 
    FLATTEN(group) AS (country,gender,sport),
    COUNT_STAR(cube) AS num_people,
    AVG(cube.height) AS avg_height;  &lt;/p&gt;

&lt;p&gt;heights = FOREACH heights GENERATE
    (country is not NULL ? country : ‘&lt;em&gt;’) as country, 
    (gender is not NULL ? gender : ‘&lt;/em&gt;’) as gender, 
    (sport is not NULL ? sport : ‘*’) as sport,
    num_people,
    avg_height;
```&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;heights&lt;/code&gt; table now contains:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;
(UK,F,baseball,1,5.5)
(UK,F,football,1,5.0)
(UK,F,*,2,5.25)
(UK,M,football,1,6.0)
(UK,M,*,1,6.0)
(UK,*,*,3,5.5)
(US,M,football,2,6.0)
(US,M,*,2,6.0)
(US,*,*,2,6.0)
(*,*,*,5,5.7)
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Although this might seem artificial, 
it is very useful if the columns in the data set are 
hierarchical. For example, this
would be useful if the data had the columns 
continent, country, and city.&lt;/p&gt;

&lt;h2 id=&quot;not-aggregating-over-certain-columns&quot;&gt;Not Aggregating Over Certain Columns&lt;/h2&gt;

&lt;p&gt;The last situation is where you may
not want to aggregation over a certain column.
This may be useful if one of the columns cannot logically
be aggregated over.&lt;/p&gt;

&lt;p&gt;For our example data set above, supposed that we wanted to 
cube over gender and sport. But what if we wanted
this quantity only for a particular country,
not aggregated over all countries as before.&lt;/p&gt;

&lt;p&gt;We can do this with &lt;code&gt;CUBE&lt;/code&gt; followed by &lt;code&gt;FLATTEN&lt;/code&gt;:&lt;/p&gt;

&lt;p&gt;```
cubed = CUBE people BY CUBE(gender, sport);&lt;/p&gt;

&lt;p&gt;flattened_bags = FOREACH cubed GENERATE 
    FLATTEN(cube);&lt;/p&gt;

&lt;p&gt;flattened_bags = FOREACH flattened_bags GENERATE
    name as name,
    country as country,
    (gender is not NULL ? gender : ‘&lt;em&gt;’) as gender, 
    (sport is not NULL ? sport : ‘&lt;/em&gt;’) as sport,
    height as height;
```&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;flattened_bags&lt;/code&gt; table contains all of the rows
from the bags created by &lt;code&gt;CUBE&lt;/code&gt;:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;
(Mary,UK,F,baseball,5.5)
(Ellen,UK,F,football,5.0)
(Mary,UK,F,*,5.5)
(Ellen,UK,F,*,5.0)
(Alex,US,M,football,5.5)
(Ted,UK,M,football,6.0)
(Steve,US,M,football,6.5)
(Alex,US,M,*,5.5)
(Steve,US,M,*,6.5)
(Ted,UK,M,*,6.0)
(Mary,UK,*,baseball,5.5)
(Ted,UK,*,football,6.0)
(Steve,US,*,football,6.5)
(Alex,US,*,football,5.5)
(Ellen,UK,*,football,5.0)
(Mary,UK,*,*,5.5)
(Alex,US,*,*,5.5)
(Steve,US,*,*,6.5)
(Ellen,UK,*,*,5.0)
(Ted,UK,*,*,6.0)
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Finally, we can group the flattened bags
by any columns we want to aggregate over:&lt;/p&gt;

&lt;p&gt;```
grouped = GROUP flattened_bags BY (country,gender,sport);&lt;/p&gt;

&lt;p&gt;heights = FOREACH grouped GENERATE
    FLATTEN(group) AS (country,gender,sport),
    COUNT(flattened_bags) AS num_people,
    AVG(flattened_bags.height) AS avg_height;
```&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;heights&lt;/code&gt; table now contains:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;
(UK,*,*,3,5.5)
(UK,*,baseball,1,5.5)
(UK,*,football,2,5.5)
(UK,F,*,2,5.25)
(UK,F,baseball,1,5.5)
(UK,F,football,1,5.0)
(UK,M,*,1,6.0)
(UK,M,football,1,6.0)
(US,*,*,2,6.0)
(US,*,football,2,6.0)
(US,M,*,2,6.0)
(US,M,football,2,6.0)
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;This table has all possible combinations of
aggregations over gender and sport, but does not aggregate over
country.&lt;/p&gt;

&lt;h2 id=&quot;links&quot;&gt;Links&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://prasanthj.info&quot;&gt;Prasanth Jayachandran&lt;/a&gt; created the &lt;code&gt;CUBE&lt;/code&gt;
and &lt;code&gt;ROLLUP&lt;/code&gt; functions
as a &lt;a href=&quot;http://www.google-melange.com/&quot;&gt;Google Summer of Code project&lt;/a&gt;
in 2012. See &lt;a href=&quot;https://issues.apache.org/jira/browse/PIG-2167&quot;&gt;PIG-2167&lt;/a&gt; for
the development of these commands.&lt;/li&gt;
  &lt;li&gt;The official release of &lt;a href=&quot;https://blogs.apache.org/pig/entry/apache_pig_it_goes_to&quot;&gt;Apache Pig 0.11&lt;/a&gt;
that announced the &lt;code&gt;CUBE&lt;/code&gt; and &lt;code&gt;ROLLUP&lt;/code&gt; functions.&lt;/li&gt;
  &lt;li&gt;The idea behind the &lt;code&gt;CUBE&lt;/code&gt; and &lt;code&gt;ROLLUP&lt;/code&gt; function originated in the
idea of a &lt;a href=&quot;http://en.wikipedia.org/wiki/OLAP_cube&quot;&gt;OLAP cube&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;Several databases (like 
&lt;a href=&quot;http://technet.microsoft.com/en-us/library/ms175939&quot;&gt;Microsoft SQL Server&lt;/a&gt;) implement
&lt;code&gt;CUBE&lt;/code&gt; and &lt;code&gt;ROLLUP&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;Cube and Rollup are implemented in &lt;a href=&quot;http://hive.apache.org/&quot;&gt;Apache Hive&lt;/a&gt;. See &lt;a href=&quot;https://cwiki.apache.org/confluence/display/Hive/Enhanced+Aggregation,+Cube,+Grouping+and+Rollup#EnhancedAggregation,Cube,GroupingandRollup-CubesandRollups&quot;&gt;here&lt;/a&gt; for documentation.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you have any questions or comments, please post them below. If
you liked this post, you can
&lt;a href=&quot;https://twitter.com/intent/tweet?url=http://www.joshualande.com/cube-rollup-pig-data-science&amp;amp;text=CUBE and ROLLUP: Two Apache Pig Functions That Every Data Scientist Should Know&amp;amp;via=joshualande&quot; target=&quot;_blank&quot;&gt;
  share it with your followers&lt;/a&gt; 
or 
&lt;a href=&quot;https://twitter.com/joshualande&quot;&gt;
  follow me on Twitter&lt;/a&gt;!&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>How I Created a Beautiful and Minimal Blog Using Jekyll, Github Pages, and poole</title>
   <link href="http://www.joshualande.com/jekyll-github-pages-poole"/>
   <updated>2014-02-03T00:00:00-05:00</updated>
   <id>http://www.joshualande.com/jekyll-github-pages-poole</id>
   <content type="html">&lt;p&gt;I recently migrated this website from &lt;a href=&quot;http://wordpress.com&quot;&gt;Wordpress&lt;/a&gt; to &lt;a href=&quot;http://pages.github.com/&quot;&gt;Github pages&lt;/a&gt;
using &lt;a href=&quot;http://jekyllrb.com&quot;&gt;Jekyll&lt;/a&gt; and &lt;a href=&quot;https://github.com/poole/poole&quot;&gt;poole&lt;/a&gt;. So far I am really happy with the transition. Over time, I grew to really dislike how heavy-weight Wordpress is. I dislike how WYSIWYG editors make it really hard to see what HTML is being generated and tend to bloat the code that is produced. I found the Wordpress plugin system so confusing that I was afraid to try to customize the layout of anything.&lt;/p&gt;

&lt;p&gt;The process of backing up Wordpress is a huge pain. I was annoyed constantly installing security updates. I hated having to keep an opaque database in order to keep all of my content. And whenever I went in to edit my website, I was always afraid that I would fat-finger change something and have no idea what happened. &lt;/p&gt;

&lt;p&gt;So when I learned about &lt;a href=&quot;http://jekyllrb.com/&quot;&gt;Jekyll&lt;/a&gt;, it seemed like a great alternative. I like the idea that my entire blog is a set of static files. Besides its simplicity, it makes backups so much easier and avoids most common security concerns caused by running dynamic websites. I could write my posts in &lt;a href=&quot;http://en.wikipedia.org/wiki/Markdown&quot;&gt;Markdown&lt;/a&gt; which I know from &lt;a href=&quot;https://www.atlassian.com/software/confluence&quot;&gt;Confluence&lt;/a&gt; and &lt;a href=&quot;http://github.com&quot;&gt;GitHub&lt;/a&gt;. Also, Jekyll allows for code examples to be very nicely embedded in the website. Finally, Jekyll is very lightweight and allows for very minimal websites without any bloat.&lt;/p&gt;

&lt;p&gt;The fact that GitHub provides &lt;a href=&quot;http://pages.github.com&quot;&gt;free hosting for Jekyll blogs&lt;/a&gt; is just icing on the cake. It will save me ~$50 per year in hosting. GitHub provides automatic version control of my blog. I can use GitHub’s web editor to write blog posts online. And I can still connect it to my custom domain (&lt;a href=&quot;http://joshualande.com&quot;&gt;joshualande.com&lt;/a&gt;).&lt;/p&gt;

&lt;h2 id=&quot;getting-started&quot;&gt;Getting Started&lt;/h2&gt;

&lt;p&gt;Instead of reading a lot of documentation, I found this really great git repo called &lt;a href=&quot;https://github.com/poole/poole&quot;&gt;poole&lt;/a&gt;. poole provides:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;“a clear and concise foundational setup for any Jekyll site. And it has a super minimal look… It does so by furnishing a full vanilla Jekyll install with example templates, pages, posts, and styles.”&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href=&quot;http://demo.getpoole.com/&quot;&gt;demo.getpoole.com&lt;/a&gt; is a working demo of the poole website that looks like:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/demo_poole_website.png&quot; alt=&quot;The demo pool website&quot; /&gt;&lt;/p&gt;

&lt;p&gt;To get started with my blog, all I had to do was create a new Git repo with the name &lt;a href=&quot;http://joshualande.github.io&quot;&gt;joshualande.github.io&lt;/a&gt;, download the poole repository, and push it to my git repo. A few minutes later the website joshualande.github.io was ready! I only had a few posts on my previous website so I just copied them over manually. But there is &lt;a href=&quot;http://jekyllrb.com/docs/migrations&quot;&gt;a package&lt;/a&gt; for migrating blogs to Jekyll.&lt;/p&gt;

&lt;h2 id=&quot;blog-layout&quot;&gt;Blog Layout&lt;/h2&gt;

&lt;p&gt;The initial state of the poole repository is:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;ls -1
404.html
CNAME
LICENSE.md
README.md
_config.yml
_includes
_layouts
_posts
about.md
atom.xml
index.html
public&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;You can view the folder structure on &lt;a href=&quot;https://github.com/poole/poole&quot;&gt;GitHub&lt;/a&gt;.
When you run Jekyll, it creates a folder called _site with the
static website inside of it. Every file or folder in the repo will get copied 
into the _site folder unless it begins with an underscore.
Markdown files will get automatically converted to HTML
and poole uses the &lt;a href=&quot;http://liquidmarkup.org&quot;&gt;Liquid&lt;/a&gt; templating system to allow
for somewhat dynamic content on the website.&lt;/p&gt;

&lt;p&gt;The folder &lt;a href=&quot;https://github.com/poole/poole/tree/master/_posts&quot;&gt;_posts&lt;/a&gt; contains all of the blog posts in markdown format.
The example posts that come with poole are:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;ls -1 _posts/
2013-12-31-whats-jekyll.md
2014-01-01-example-content.md
2014-01-02-introducing-poole.md&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/poole/poole/blob/master/index.html&quot;&gt;index.html&lt;/a&gt; 
contains the front page of the blog and 
&lt;a href=&quot;https://github.com/poole/poole/blob/master/about.md&quot;&gt;about.md&lt;/a&gt; is a
static post in markdown format.
If you want to have more static files, you can just add them to the
repo and poole will copy them to the _site folder when rendering the website.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/poole/poole/blob/master/_config.yml&quot;&gt;_config&lt;/a&gt; 
contains general configuration stuff for the website:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-yaml&quot; data-lang=&quot;yaml&quot;&gt;&lt;span class=&quot;c1&quot;&gt;## Setup&lt;/span&gt;
&lt;span class=&quot;l-Scalar-Plain&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt;            &lt;span class=&quot;l-Scalar-Plain&quot;&gt;Poole&lt;/span&gt;
&lt;span class=&quot;l-Scalar-Plain&quot;&gt;tagline&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt;          &lt;span class=&quot;s&quot;&gt;&amp;#39;The&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Jekyll&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Butler&amp;#39;&lt;/span&gt;
&lt;span class=&quot;l-Scalar-Plain&quot;&gt;description&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt;      &lt;span class=&quot;s&quot;&gt;&amp;#39;Base&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;theme&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Jekyll&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;themes&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;by&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;@mdo.&amp;#39;&lt;/span&gt;
&lt;span class=&quot;l-Scalar-Plain&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt;              &lt;span class=&quot;l-Scalar-Plain&quot;&gt;http://getpoole.com&lt;/span&gt;
&lt;span class=&quot;nn&quot;&gt;...&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Finally, the folders &lt;a href=&quot;https://github.com/poole/poole/blob/master/_layouts&quot;&gt;_layouts&lt;/a&gt; 
and &lt;a href=&quot;https://github.com/poole/poole/tree/master/_includes&quot;&gt;_includes&lt;/a&gt;
contain boiler-plate HTML for building the website.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-yaml&quot; data-lang=&quot;yaml&quot;&gt;&lt;span class=&quot;l-Scalar-Plain&quot;&gt;$ ls -1 _layouts/&lt;/span&gt;
&lt;span class=&quot;l-Scalar-Plain&quot;&gt;default.html&lt;/span&gt;
&lt;span class=&quot;l-Scalar-Plain&quot;&gt;page.html&lt;/span&gt;
&lt;span class=&quot;l-Scalar-Plain&quot;&gt;post.html&lt;/span&gt;
&lt;span class=&quot;l-Scalar-Plain&quot;&gt;$ ls -1 _includes/&lt;/span&gt;
&lt;span class=&quot;l-Scalar-Plain&quot;&gt;head.html&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;I will describe next some tweaks I made to the base website.&lt;/p&gt;

&lt;h2 id=&quot;customizations&quot;&gt;Customizations&lt;/h2&gt;

&lt;p&gt;To get my blog to its current form, I made a few modifications to the base poole layout. &lt;/p&gt;

&lt;p&gt;FIrst, I wanted to create an &lt;a href=&quot;/archive/&quot;&gt;Archive&lt;/a&gt; page which listed all of my blog posts.
To do this, I created the file &lt;a href=&quot;https://github.com/joshualande/joshualande.github.io/blob/5e5ca6389fbc66be06488b9b7803e0278ee1b89f/archive.md&quot;&gt;archive.md&lt;/a&gt; which shows a dynamic list of all of 
my blog posts:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;---
layout: page
title: Archive
---

## Blog Posts

{% for post in site.posts %}
  * {{ post.date | date_to_string }} &lt;span class=&quot;ni&quot;&gt;&amp;amp;raquo;&lt;/span&gt; [ {{ post.title }} ]({{ post.url }})
{% endfor %}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Note that the syntax &lt;code&gt;{% for post in site.posts %}&lt;/code&gt; is from the Liquid templating system.&lt;/p&gt;

&lt;p&gt;Next, I wanted to add a navigation bar at the top of the website with links to the &lt;a href=&quot;/about/&quot;&gt;About&lt;/a&gt; page, &lt;a href=&quot;/archive&quot;&gt;Archive&lt;/a&gt; page, and the feed. To do this, I modified the file &lt;a href=&quot;https://github.com/joshualande/joshualande.github.io/blob/64d03b883b64dd8aedf30b903ecaae92a282955a/_config.yml&quot;&gt;_config.yml&lt;/a&gt; to define a dictionary of pages to show in my header:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-yaml&quot; data-lang=&quot;yaml&quot;&gt;&lt;span class=&quot;l-Scalar-Plain&quot;&gt;pages_list&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt;       
  &lt;span class=&quot;l-Scalar-Plain&quot;&gt;About&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;/about&amp;#39;&lt;/span&gt;
  &lt;span class=&quot;l-Scalar-Plain&quot;&gt;Archive&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;/archive&amp;#39;&lt;/span&gt;
  &lt;span class=&quot;l-Scalar-Plain&quot;&gt;Feed&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;/atom.xml&amp;#39;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;I then modify the file &lt;a href=&quot;https://github.com/joshualande/joshualande.github.io/blob/64d03b883b64dd8aedf30b903ecaae92a282955a/_layouts/default.html&quot;&gt;_layouts/default.html&lt;/a&gt; to loop over this list, creating links to each of the pages:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;h3&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;masthead-title&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;/&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;title=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;Home&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;{{ site.title }}&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;

{% for page in site.pages_list %}
  &lt;span class=&quot;ni&quot;&gt;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;small&amp;gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;{{ page[1]  }}&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;{{ page[0] }}&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&amp;lt;/small&amp;gt;&lt;/span&gt;
{% endfor %}
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/h3&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&quot;disqus-comments&quot;&gt;Disqus Comments&lt;/h2&gt;

&lt;p&gt;I wanted to enable &lt;a href=&quot;http://disqus.com/&quot;&gt;Disqus&lt;/a&gt; comments on the
blog. To do that, I modified the file &lt;a href=&quot;https://github.com/joshualande/joshualande.github.io/blob/64d03b883b64dd8aedf30b903ecaae92a282955a/_layouts/default.html&quot;&gt;_layouts/default.html&lt;/a&gt; to include the line:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;comments&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;html&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;I then created a file &lt;a href=&quot;https://github.com/joshualande/joshualande.github.io/blob/64d03b883b64dd8aedf30b903ecaae92a282955a/_includes/comments.html&quot;&gt;_includes/comments.html&lt;/a&gt; which includes the code given to me by Disqus:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;{% if page.comments %}
&lt;span class=&quot;c&quot;&gt;&amp;lt;!-- Add Disqus comments. --&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;disqus_thread&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;text/javascript&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;cm&quot;&gt;/* * * CONFIGURATION VARIABLES: EDIT BEFORE PASTING INTO YOUR WEBPAGE * * */&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;disqus_shortname&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;&amp;lt;USERNAME&amp;gt;&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// required: replace example with your forum shortname&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;disqus_identifier&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;{{ site.disqusid }}{{ page.url | replace:&amp;#39;index.html&amp;#39;,&amp;#39;&amp;#39; }}&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

  &lt;span class=&quot;cm&quot;&gt;/* * * DON&amp;#39;T EDIT BELOW THIS LINE * * */&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;dsq&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;createElement&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;script&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;dsq&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;text/javascript&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;dsq&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;dsq&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;src&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;//&amp;#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;disqus_shortname&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;.disqus.com/embed.js&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getElementsByTagName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;head&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getElementsByTagName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;body&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;appendChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;dsq&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;})();&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;noscript&amp;gt;&lt;/span&gt;Please enable JavaScript to view the &lt;span class=&quot;nt&quot;&gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;http://disqus.com/?ref_noscript&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;comments powered by Disqus.&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&amp;lt;/noscript&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;http://disqus.com&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;dsq-brlink&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;comments powered by &lt;span class=&quot;nt&quot;&gt;&amp;lt;span&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;logo-disqus&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Disqus&lt;span class=&quot;nt&quot;&gt;&amp;lt;/span&amp;gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
{% endif %}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;By setting up the code this way, I can enabled commenting on a page-by-page basis. All I have to do is set “comments: True” in the YAML header of the post.&lt;/p&gt;

&lt;h2 id=&quot;google-analytics&quot;&gt;Google Analytics&lt;/h2&gt;

&lt;p&gt;Finally, I enabled &lt;a href=&quot;http://www.google.com/analytics&quot;&gt;Google Analytics&lt;/a&gt; on the website. First, I had to register my website through
Google Analytics. Google gave me this javascript tracking code to embed on every website:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;script&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;o&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;g&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;GoogleAnalyticsObject&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;||&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;q&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;q&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;||&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[]).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;arguments&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)},&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;l&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;createElement&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;o&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getElementsByTagName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;o&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;async&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;g&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;parentNode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;insertBefore&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;})(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;script&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;//www.google-analytics.com/analytics.js&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;ga&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

  &lt;span class=&quot;nx&quot;&gt;ga&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;create&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;UA-47674613-1&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;joshualande.com&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;ga&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;send&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;pageview&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;I put this code in the file
&lt;a href=&quot;https://github.com/joshualande/joshualande.github.io/blob/64d03b883b64dd8aedf30b903ecaae92a282955a/_includes/google_analytics.html&quot;&gt;_includes/google_analytics.html&lt;/a&gt;
Finally, I included this tracking code on all of the pages of my website by modifying the file
&lt;a href=&quot;https://github.com/joshualande/joshualande.github.io/blob/64d03b883b64dd8aedf30b903ecaae92a282955a/_layouts/default.html&quot;&gt;_layouts/default.html&lt;/a&gt;
to include the line:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;{% include google_analytics.html %}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&quot;getting-a-custom-url&quot;&gt;Getting a Custom URL&lt;/h2&gt;

&lt;p&gt;Once I got my blog up to speed on GitHub with the URL &lt;a href=&quot;http://joshualande.github.io&quot;&gt;joshualande.github.io&lt;/a&gt;, it was easy to link my personal domain &lt;a href=&quot;http://joshualande.com&quot;&gt;joshualande.com&lt;/a&gt; to it. I use Namecheap to host my domain, so I followed the instructions &lt;a href=&quot;http://davidensinger.com/2013/03/setting-the-dns-for-github-pages-on-namecheap&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I hope this blog will help you get up to speed quickly with GitHub Pages, Jekyll, and poole.
If you have any questions about my implementation, you can view my entire website on &lt;a href=&quot;https://github.com/joshualande/joshualande.github.io&quot;&gt;GitHub&lt;/a&gt; or leave a question below.&lt;/p&gt;

&lt;h2 id=&quot;adding-a-custom-twitter-plug-to-the-bottom-of-each-post&quot;&gt;Adding a Custom Twitter Plug To the Bottom of Each Post&lt;/h2&gt;

&lt;p&gt;I was not thrilled by the idea of putting
big Social Media buttons on my website.
I felt that they would disrupt the minimal design and layout of my website. 
And after reading 
&lt;a href=&quot;https://news.ycombinator.com/item?id=7232738&quot;&gt;this discussion&lt;/a&gt; 
on &lt;a href=&quot;news.ycombinator.com&quot;&gt;Hacker News&lt;/a&gt;, I decided
to leave them off.
But I wanted some lightweight way to
allow people to share my posts on Twitter if they though
their followers would appreciate it.
As a compromise, I decide to add a
sentence at the end of each blog post saying:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;“If you have any questions or comments, please post them below. If
you liked this post, you can
&lt;a href=&quot;https://twitter.com/intent/tweet?url=http://www.joshualande.com/jekyll-github-pages-poole&amp;amp;text=How I Created a Beautiful and Minimal Blog Using Jekyll, Github Pages, and poole&amp;amp;via=joshualande&quot; target=&quot;_blank&quot;&gt;
  share it with your followers&lt;/a&gt; 
or 
&lt;a href=&quot;https://twitter.com/joshualande&quot;&gt;
  follow me on Twitter&lt;/a&gt;!
“&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I felt this was a reasonable compromise between
utility and obnoxiousness.&lt;/p&gt;

&lt;p&gt;To dynamically generate this sentence on each post
and automatically create a nice looking Tweet,
I created a file called 
&lt;a href=&quot;https://github.com/joshualande/joshualande.github.io/blob/8405f035bd7da5306b1a35a4a4632bf698ea4f0a/_includes/twitter_plug.html&quot;&gt;_includes/twitter_plug.html&lt;/a&gt;
which contains:&lt;/p&gt;

&lt;p&gt;```html&lt;/p&gt;

&lt;p&gt;If you liked this post, you can
&lt;a href=&quot;https://twitter.com/intent/tweet?url={{ site.url }}{{ page.url }}&amp;amp;text={{ page.title }}&amp;amp;via=joshualande&quot; target=&quot;_blank&quot;&gt;
  share it with your followers&lt;/a&gt; 
or 
&lt;a href=&quot;https://twitter.com/joshualande&quot;&gt;
  follow me on Twitter&lt;/a&gt;!&lt;/p&gt;

&lt;p&gt;```&lt;/p&gt;

&lt;p&gt;When you click on “share it with your followers”, it will automatically compose a tweet like:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;How I Created a Beautiful and Minimal Blog Using Jekyll, Github Pages, and poole http://www.joshualande.com/2014/02/03/jekyll-github-pages-poole/ via @joshualande&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Whenever I want to include the Twitter plug on a post, I just add the liquid tag:&lt;/p&gt;

&lt;p&gt;```&lt;/p&gt;

&lt;p&gt;{% include twitter_plug.html %}&lt;/p&gt;

&lt;p&gt;```&lt;/p&gt;

&lt;h2 id=&quot;futher-reading&quot;&gt;Futher Reading&lt;/h2&gt;

&lt;p&gt;In &lt;a href=&quot;/short-urls-jekyll&quot;&gt;this post&lt;/a&gt;,
I describe how to set short and minimil URLs for your blog posts
(like how the URL for this post is
&lt;a href=&quot;http://www.joshualande.com/jekyll-github-pages-poole&quot;&gt;joshualande.com/jekyll-github-pages-poole&lt;/a&gt;
instead of
&lt;a href=&quot;http://www.joshualande.com/2014/02/03/jekyll-github-pages-poole&quot;&gt;joshualande.com/2014/02/03/jekyll-github-pages-poole&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;In &lt;a href=&quot;/redirect-urls-jekyll-github&quot;&gt;this post&lt;/a&gt;,
I describe how to redirect existing URLs from an old permalink structure to a
new permalink structure.&lt;/p&gt;

&lt;h2 id=&quot;more-links&quot;&gt;More Links&lt;/h2&gt;

&lt;p&gt;Here are some links which helped me along the way:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;The official &lt;a href=&quot;http://jekyllrb.com&quot;&gt;Jekyll&lt;/a&gt; website, along with detailed &lt;a href=&quot;http://jekyllrb.com/docs/home&quot;&gt;documentation&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;Documentation by GitHub about hosting static webpages with &lt;a href=&quot;http://pages.github.com&quot;&gt;GitHub pages&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;The &lt;a href=&quot;https://github.com/poole/poole&quot;&gt;poole&lt;/a&gt; GitHub repository.&lt;/li&gt;
  &lt;li&gt;The GitHub repository for my &lt;a href=&quot;http://github.com/joshualande/joshualande.github.io&quot;&gt;personal website&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you have any questions or comments, please post them below. If
you liked this post, you can
&lt;a href=&quot;https://twitter.com/intent/tweet?url=http://www.joshualande.com/jekyll-github-pages-poole&amp;amp;text=How I Created a Beautiful and Minimal Blog Using Jekyll, Github Pages, and poole&amp;amp;via=joshualande&quot; target=&quot;_blank&quot;&gt;
  share it with your followers&lt;/a&gt; 
or 
&lt;a href=&quot;https://twitter.com/joshualande&quot;&gt;
  follow me on Twitter&lt;/a&gt;!&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>Searching for Pulsar Wind Nebulae at the Kavli Institute for Particle Astrophysics and Cosmology</title>
   <link href="http://www.joshualande.com/searching-pulsar-wind-nebulae-kiapc"/>
   <updated>2013-02-14T00:00:00-05:00</updated>
   <id>http://www.joshualande.com/searching-pulsar-wind-nebulae-kiapc</id>
   <content type="html">&lt;p&gt;&lt;img src=&quot;/assets/crab_nebula_hubble-940x940.jpg&quot; alt=&quot;The Crab Nebula observed by Hubble.&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;pulsar-wind-nebulae&quot;&gt;Pulsar Wind Nebulae&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;/assets/fermi_gamma_ray_space_telescope-580x773.jpg&quot; alt=&quot;An artists rendering of the Fermi Gamma-ray Space Telescope. The image is from http://www.nasa.gov/mission_pages/GLAST/multimedia/glast_rendering3.html&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I got a PhD from &lt;a href=&quot;http://www.stanford.edu&quot;&gt;Stanford University&lt;/a&gt; in
Physics. In graduate school I studied the Gamma-ray emission
from &lt;a href=&quot;http://en.wikipedia.org/wiki/Pulsar_wind_nebula&quot;&gt;pulsar wind
nebulae&lt;/a&gt;. 
A &lt;a href=&quot;http://en.wikipedia.org/wiki/Pulsar&quot;&gt;pulsar&lt;/a&gt; is a rapidly rotating
neutron star. Pulsars were first discovered in 1967 by &lt;a href=&quot;http://en.wikipedia.org/wiki/Jocelyn_Bell_Burnell&quot;&gt;Jocelyn
Bell Burnell&lt;/a&gt;.
Pulsars are typically powered by the energy released when a neutron
star slows down. Much of this energy is released as a wind of
electrons, which interacts with the interstellar medium. This forms
a diffuse cloud called a pulsar wind nebulae that can be observed
in gamma-rays.&lt;/p&gt;

&lt;h2 id=&quot;the-fermi-gamma-ray-space-telescope&quot;&gt;The Fermi Gamma-ray Space Telescope&lt;/h2&gt;

&lt;p&gt;During my thesis, I observed pular wind nebulae with the &lt;a href=&quot;http://fermi.gsfc.nasa.gov/science/instruments/lat.html&quot;&gt;Large Area Telescope (LAT)&lt;/a&gt;, the main scientific instrument on board the &lt;a href=&quot;http://fermi.gsfc.nasa.gov&quot;&gt;Fermi Gamma-ray Space Telescope (Fermi)&lt;/a&gt;. Fermi, pictured on the right, is a pair-conversion gamma-ray telescope. Cosmic gamma-rays are interesting to study because they originate in the most extreme and energetic astrophysical environments. &lt;a href=&quot;http://www-glast.stanford.edu/instrument.html&quot;&gt;Here&lt;/a&gt; is a good description of the design of the instrument. Fermi was launched in June of 2008 with a designed mission length of 5 years and a goal of operating for 10 years. &lt;a href=&quot;http://fermi.sonoma.edu/multimedia/GLASTPromoVideo.mp4&quot;&gt;Here&lt;/a&gt; is an artist rendering of the mission launch.&lt;/p&gt;

&lt;h2 id=&quot;fermi-lat-search-for-pulsar-wind-nebulae-around-gamma-ray-pulsarshttpiopscienceioporg0004-637x726135&quot;&gt;&lt;a href=&quot;http://iopscience.iop.org/0004-637X/726/1/35&quot;&gt;“Fermi-LAT Search for Pulsar Wind Nebulae around gamma-ray Pulsars”&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;/assets/pulsar_wind_nebulae_search_-HESS-J1023-575-580x580.jpg&quot; alt=&quot;The distribution in energy of the gamma-ray emission from the source Westerlund 2 detected by Fermi.&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The first detection of gamma-ray emission from a pulsar wind nebula was the crab nebulae, detected by a previous gamma-ray detector called the Energetic Gamma Ray Experiment Telescope (&lt;a href=&quot;http://heasarc.gsfc.nasa.gov/docs/cgro/egret&quot;&gt;EGRET&lt;/a&gt;) in &lt;a href=&quot;http://adsabs.harvard.edu/abs/1993ApJ...409..697N&quot;&gt;1991&lt;/a&gt;. Since then, the &lt;a href=&quot;http://iopscience.iop.org/0004-637X/713/1/146&quot;&gt;Vela X&lt;/a&gt; and &lt;a href=&quot;http://iopscience.iop.org/0004-637X/714/1/927/fulltext&quot;&gt;MSH 15-52&lt;/a&gt; pulsar wind nebulae were detected by Fermi in 2010.&lt;/p&gt;

&lt;p&gt;The first paper I was involved with was a search for new pulsar wind nebulae that emit gamma-ray radiation. In this paper, we selected 54 pulsars which had been &lt;a href=&quot;http://arxiv.org/abs/0910.1608&quot;&gt;previously detected by Fermi&lt;/a&gt;. Because the emission from pulsars is pulsating in time, we could select and remove the pulsed emission. In this so-called off-pulse window, we performed a search for gamma-ray emission that could come from pulsar wind nebulae.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/edot_dsquared_vs_age-580x551.jpg&quot; alt=&quot;The age of the pulsar (on the x axis) compared to the energy output of the pulsar (on the y axis). The red stars are pulsar wind nebulae detected by Fermi.&quot; /&gt;&lt;/p&gt;

&lt;p&gt;In this analysis, we discovered a new pulsar wind nebula associated with the &lt;a href=&quot;http://tevcat.uchicago.edu/?mode=1;id=132&quot;&gt;Westerlund 2 region&lt;/a&gt; (see above). In addition, we performed a population study of four gamma-ray emitting pulsar wind nebula. We observed that young and highly energetic pulsars power gamma-ray emitting pulsar wind nebulae.&lt;/p&gt;

&lt;p&gt;The full text of the paper can be read for free at the &lt;a href=&quot;http://arxiv.org/abs/1011.2076&quot;&gt;arXiv&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;search-for-spatially-extended-fermi-lat-sources-using-two-years-of-datahttpiopscienceioporg0004-637x75615&quot;&gt;&lt;a href=&quot;http://iopscience.iop.org/0004-637X/756/1/5/&quot;&gt;“Search for Spatially Extended Fermi-LAT Sources Using Two Years of Data”&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;/assets/extended_source_search_RX_J1713.7_3946-580x581.jpg&quot; alt=&quot;The supernova remnant RX J1713.7-3946 observed by Fermi. The blue contours are the SNR as observed by H.E.S.S.&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The next paper I worked on focused on developed new methods to study the spatial structure of sources detected by Fermi. Before Fermi, pervious gamma-ray telescopes had relatively low statistics and a notoriously-poor angular resolution. Given its improved angular resolution and better statistics, Fermi was the first gamma-ray detector capable of spatially resolving a large number of gamma-ray sources.&lt;/p&gt;

&lt;p&gt;Studying the spatial structure of a Fermi source is important because it is often difficult to find a counterpart for a Fermi source observed at other wavelengths (for example, &lt;a href=&quot;http://en.wikipedia.org/wiki/Radio_astronomy&quot;&gt;radio&lt;/a&gt;, &lt;a href=&quot;http://en.wikipedia.org/wiki/Visible-light_astronomy&quot;&gt;optical&lt;/a&gt;, or &lt;a href=&quot;http://en.wikipedia.org/wiki/X-ray_astronomy&quot;&gt;x-ray&lt;/a&gt;). The second Fermi source catalog detected 1,873 sources, but 575 of them &lt;a href=&quot;http://www.nasa.gov/mission_pages/GLAST/news/gamma-ray-census.html&quot;&gt;could not be associated to a known source counterpart&lt;/a&gt;. In addition, often there are several potential counterparts to a Fermi source. In many situations, the spatial shape of the observed source can be compared to potential counterparts to uniquely classify the source.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/ts_ext_simulation-580x562.jpg&quot; alt=&quot;This monte-carlo simulation was used to show that we could use pointlike to study spatially-extended sources. Each curve represents ~90,000 independent simulations.&quot; /&gt;&lt;/p&gt;

&lt;p&gt;In the paper, we developed a new method to study spatially-extended Fermi sources. We used the Fermi data fitting-fitting package called pointlike (described &lt;a href=&quot;/pointlike-fitting-package&quot;&gt;here&lt;/a&gt;) and added functionality to the program to fit the shape of an assumed spatially-extended Fermi source. We then defined a test for the statistical significance of the detection of extension and validated this test with an involved monte-carlo simulation. Next, we computed the sensitivity of Fermi to detected spatially-extended sources. We then validated this test by applying it to a &lt;a href=&quot;http://en.wikipedia.org/wiki/Active_galactic_nucleus&quot;&gt;active galactic nucleus&lt;/a&gt;, Fermi sources which are known to be pointlike.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/hess_j1614_and_j1616-580x581.jpg&quot; alt=&quot;The source HESS J1616-508 (left) and HESS J1615-518 (right). The source on the left is likely a pulsar wind nebula.&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Finally, we took this new method and applied it to two years of Fermi data to search for new spatially-extended Fermi sources. In our search, we discovered seven new spatially-extended sources, bringing the total number of extended sources to 21. In particular, we detected the source RX J1713.7-3946 to be spatially-extended (see the picture above) and the extended sources HESS J1616-508 and HESS J1615-518 (pictures on the left). The location of the extended Fermi sources is overlaid on a map of the gamma-ray sky below. For these sources, this spatial analysis was important for identifying the nature of the gamma-ray emission. The full text of the paper can be bread for free at the &lt;a href=&quot;http://arxiv.org/abs/1207.0027&quot;&gt;arXiv&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/allsky_extended_sources_color-580x356.jpg&quot; alt=&quot;A map of the gamma-ray sky. Overlaid are the 21 spatially-extended sources observed by Fermi. The orange triangles represent new extended sources discovered by the analysis.&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;the-pointlike-maximum-likelihood-package&quot;&gt;The pointlike maximum-likelihood package&lt;/h2&gt;

&lt;p&gt;During my PhD, I have been involved with the development of a maximum-likelihood package to fit LAT data. In the process, I have learned about software management, code refactoring, interface design, version control, and issue tracking. I have written about the program &lt;a href=&quot;/pointlike-fitting-package&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;phd-thesis&quot;&gt;PhD Thesis&lt;/h2&gt;

&lt;p&gt;You can find my PhD thesis through the &lt;a href=&quot;http://purl.stanford.edu/zj578kk6428&quot;&gt;Stanford Library&lt;/a&gt; or on the &lt;a href=&quot;http://arxiv.org/abs/1401.6718&quot;&gt;arXiv&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The slides from my PhD talk are on &lt;a href=&quot;http://www.slideshare.net/joshualande/neutron-star-powered-nebulae&quot;&gt;slideshare&lt;/a&gt;.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Studying Physics at Marlboro College in the Hills of Vermont</title>
   <link href="http://www.joshualande.com/physics-marlboro-college-vermont"/>
   <updated>2013-02-14T00:00:00-05:00</updated>
   <id>http://www.joshualande.com/physics-marlboro-college-vermont</id>
   <content type="html">&lt;p&gt;&lt;img src=&quot;/assets/marlboro_community_photo_2008-940x626.jpg&quot; alt=&quot;The Marlboro College 2008 Community Photo. I am on the very right
three rows from the
bottom.&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I went to &lt;a href=&quot;http://www.marlboro.edu&quot;&gt;Marlboro College&lt;/a&gt; and graduated
in 2008.  Marlboro is a liberal arts school in the beautiful hills
of &lt;a href=&quot;http://marlboro.vt.us&quot;&gt;Marlboro, Vermont&lt;/a&gt; with a very small
student body of 300 students. I loved my experience at Marlboro
and excelled in the environment, majoring in Physics and minoring
in Computer Science.  I participated in three summer physics
internships and wrote a senior thesis (described below).&lt;/p&gt;

&lt;h2 id=&quot;undergraduate-research&quot;&gt;Undergraduate Research&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;/assets/josh_marlboro_orals-580x832.jpg&quot; alt=&quot;I am excited to successfully defended my plan of concentration.
I am next to my college physics professor Travis
Norsen.&quot; /&gt;&lt;/p&gt;

&lt;p&gt;During the summer after my senior year of high school (2005) and
again after my first year of college (2006), I participated in a
&lt;a href=&quot;http://seap.asee.org/program_details&quot;&gt;SEAP&lt;/a&gt; internship at
&lt;a href=&quot;http://www.anser.org/&quot;&gt;ANSER&lt;/a&gt;. I have written about the
internship &lt;a href=&quot;/health-impact-solar-particle-events-sstorm&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;After my sophomore year (2006), I participated in a &lt;a href=&quot;http://london.ucdavis.edu/~reu/REU06/reu06.html&quot;&gt;physics REU
at UC Davis&lt;/a&gt;. I
have written about the
internship &lt;a href=&quot;/simulating-deep-lens-survey-davis&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;After my Junior year (2007), I participated in a &lt;a href=&quot;http://www-group.slac.stanford.edu/aao/suli.asp&quot;&gt;SULI Internship
at SLAC&lt;/a&gt;. I have
written about the
internship &lt;a href=&quot;/calibrating-powder-diffraction-data-ssrl&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;senior-thesis&quot;&gt;Senior Thesis&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;/assets/Lande_Marlboro_Plan_Of_Concentration-940x1216.jpg&quot; alt=&quot;The cover page of my senior thesis.&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Marlboro students are required to write a senior thesis during their
senior year. My senior thesis involved continuing research I began
during the SULI internship and an experimental investivation of
&lt;a href=&quot;http://www.pasco.com/prodCatalog/WA/WA-9316_advanced-microwave-optics-system&quot;&gt;microwave
diffraction&lt;/a&gt;.
You can view my senior thesis below.  You can read my senior thesis
&lt;a href=&quot;/assets/Lande_Marlboro_Plan_Of_Concentration_2008.pdf&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>Quantifying the Health Impact of Solar Particle Events on Astronauts With SStoRM: The Solar Storm Radiation Model</title>
   <link href="http://www.joshualande.com/health-impact-solar-particle-events-sstorm"/>
   <updated>2013-02-14T00:00:00-05:00</updated>
   <id>http://www.joshualande.com/health-impact-solar-particle-events-sstorm</id>
   <content type="html">&lt;p&gt;&lt;img src=&quot;/assets/ron_turner_anser_2007-580x872.jpg&quot; alt=&quot;My SEAP internship adviser Ron Turner in front of a poster for SStoRM.&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I participated in the &lt;a href=&quot;http://seap.asee.org/program_details&quot;&gt;Science &amp;amp; Engineering Apprentice Program&lt;/a&gt; during the summer after my senior year of high school and again the following summer. I worked for &lt;a href=&quot;http://www.anser.org/turner-r-publications&quot;&gt;Dr. Ronald Turner&lt;/a&gt; at &lt;a href=&quot;http://www.anser.org/&quot;&gt;ANSER&lt;/a&gt;. He studies solar radiation from &lt;a href=&quot;http://helios.gsfc.nasa.gov/sep.html&quot;&gt;solar particle events&lt;/a&gt; and their health impact on astronauts in outer space. One practical application of his research is the protection of astronauts in outer space from dangerous radiation.&lt;/p&gt;

&lt;p&gt;During the internship, I ran a computer simulation of these solar particle events called the BRYNTRN space transport program. This program realistically simulates solar radiation as it penetrates a variable thickness space shielding and it calculates the radiation dose that a man on the other side of the shielding would be exposed to. I used this simulation to calculate the danger that a solar storm would pose to an astronaut in outer space under varying solar storm parameters.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/sstorm_time_evolution_screenshot.jpeg&quot; alt=&quot;A screen shot of the time evolution tab of SStoRM.&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Using this information, I wrote the graphical computer program &lt;a href=&quot;http://joshualande.github.com/SStoRM/&quot;&gt;SStoRM: The Solar Storm Radiation Model&lt;/a&gt;. SStoRM lets users simulate a generic solar storm and modify the storm’s parameters such as its energy spectrum and time evolution. Given these, the program presents information on the radiation exposure an astronaut would receive during that particular storm. The program then compares this radiation dose to legislated and biological limits.&lt;/p&gt;

&lt;p&gt;It also contains an exercise where a solar storm begins while an astronaut is engaged in extra-vehicular activity and has to flee to shelter. The user can specify certain parameters about how quickly the astronaut can get to their shelter and the program will assess the harm that this particular storm would cause to the astronaut.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://joshualande.github.com/SStoRM/&quot;&gt;SStoRM&lt;/a&gt; is open source and is hosted on &lt;a href=&quot;http://joshualande.github.com/SStoRM&quot;&gt;github&lt;/a&gt;. It is written in Java so it can be run on any operating system that has &lt;a href=&quot;http://www.oracle.com/technetwork/java/javase/tech/index-jsp-136112.html&quot;&gt;Java Web Start&lt;/a&gt;.You can read my research paper papers I wrote at the end of my internships &lt;a href=&quot;/assets/lande_SEAP_paper_2004.pdf&quot;&gt;here (2004)&lt;/a&gt; and &lt;a href=&quot;/assets/lande_SEAP_paper_2005.pdf&quot;&gt;here (2005)&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/sstorm_screenshot.jpeg&quot; alt=&quot;A screenshot of the lunar exercise tab of SStoRM.&quot; /&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Calibrating X-ray Powder Diffraction Data at the Stanford Synchrotron Radiation Laboratory</title>
   <link href="http://www.joshualande.com/calibrating-powder-diffraction-data-ssrl"/>
   <updated>2013-02-14T00:00:00-05:00</updated>
   <id>http://www.joshualande.com/calibrating-powder-diffraction-data-ssrl</id>
   <content type="html">&lt;p&gt;&lt;img src=&quot;/assets/IMG_1524b.jpg&quot; alt=&quot;Here I am at the end of the 2007 SULI internship with my adviser
Sam Webb.&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/IMG_1738b-580x386.jpg&quot; alt=&quot;The participants of the 2007 SLAC SULI
internship.&quot; /&gt;&lt;/p&gt;

&lt;p&gt;During the summer of 2007, I participated in a &lt;a href=&quot;http://www-group.slac.stanford.edu/aao/suli.asp&quot;&gt;Science Undergraduate
Laboratory Internship&lt;/a&gt; at
the &lt;a href=&quot;http://slac.stanford.edu/&quot;&gt;SLAC National Accelerator Laboratory&lt;/a&gt; .
I worked at the &lt;a href=&quot;http://www-ssrl.slac.stanford.edu/&quot;&gt;Stanford Synchrotron Radiation
Laboratory&lt;/a&gt; and my advisers
were &lt;a href=&quot;http://www-ssrl.slac.stanford.edu/~swebb/&quot;&gt;Sam Webb&lt;/a&gt; and
Apurva Mehta. During the internship, I worked on a program to
calibrate and reduce &lt;a href=&quot;http://en.wikipedia.org/wiki/Powder_diffraction&quot;&gt;x-ray powder
diffraction&lt;/a&gt; data.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/diffraction-data-window.jpeg&quot; alt=&quot;A typical diffraction pattern. This image is being viewed with
the Area Diffraction
Machine.&quot; /&gt;&lt;/p&gt;

&lt;p&gt;X-ray powder diffraction is a method of imagining crystals with
x-rays. The diffraction pattern that comes from the crystal are
concentric rings and the ring spacing can be used to infer the
crystalin strucutre of the material.&lt;/p&gt;

&lt;p&gt;In order to analyze the diffraction data, you have to convert from
the CCD image of the diffraction pattern to physical scattering
angles. This mapping requires knowledge of the detector geometry.
In particular, the imaging detector can often be somewhat rotated,
changing the observed circles into conic sections.&lt;/p&gt;

&lt;p&gt;The detector geometry is typically computed using a calibration
source with a known diffraction pattern. I wrote a least-squares
fitting algorithm that can calibrate the diffraction detector by
fitting a known calibration source. I then wrote code to uses the
calibrations to perform a radial integral of the sample data which
can be used to measure the diffraction peaks.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/area_diffraction_machine_screenshot.jpeg&quot; alt=&quot;A screenshot of the calibration tab of the Area Diffraction
Machine.&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I continued working on this project during my senior year of college
as a senior project. I added many features to the code such as an
graphical pixel-masking feature, a macro language for automating
the program, and a detailed manual which describes how to use it.&lt;/p&gt;

&lt;p&gt;The program is called the &lt;a href=&quot;http://code.google.com/p/areadiffractionmachine&quot;&gt;Area Diffraction
Machine&lt;/a&gt;, and it
has a robust graphical user interface which allows the program to
be adopted by a general audience of x-ray diffraction scientists.
The code is released under the &lt;a href=&quot;http://www.gnu.org/licenses/old-licenses/gpl-2.0.html&quot;&gt;GNU
GPL&lt;/a&gt;, and
is hosted on &lt;a href=&quot;http://code.google.com/p/areadiffractionmachine&quot;&gt;Google
Code&lt;/a&gt;. At the end
of my SULI internship, I wrote a research paper describing my work
that you can
read &lt;a href=&quot;/assets/lande_SULI_paper_2007.pdf&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;For my work, I was awarded at the end of the summer the &lt;a href=&quot;http://today.slac.stanford.edu/a/2007/08-20.htm&quot;&gt;Ernest
Coleman Award for Scholarship and
Citizenship&lt;/a&gt;:
&amp;gt; The award, named after one of the first directors of the SULI program’s predecessor, is nominated by the summer interns themselves. The recipient is chosen based not only on scientific achievement, but also on the support and help given to other interns. And Lande is no exception.
&amp;gt; 
&amp;gt; “He’s been fantastic,” beamed SLAC beamline scientist Sam Webb, who mentored Lande’s summer project. “He’s accomplished twice as much as we expected [&lt;a href=&quot;http://today.slac.stanford.edu/a/2007/08-20.htm&quot;&gt;from here&lt;/a&gt;]&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/IMG_1680b.jpg&quot; alt=&quot;A picture of me receiving the Ernest Coleman Award for Scholarship
and Citizenship.&quot; /&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Simulating the Deep Lens Survey at UC Davis</title>
   <link href="http://www.joshualande.com/simulating-deep-lens-survey-davis"/>
   <updated>2013-02-12T00:00:00-05:00</updated>
   <id>http://www.joshualande.com/simulating-deep-lens-survey-davis</id>
   <content type="html">&lt;p&gt;&lt;img src=&quot;/assets/2006_reu_internship_simulated_data-940x544.jpg&quot; alt=&quot;The simulated stars and galaxies from my DLS simulation I created during my 2006 physics REU.&quot; /&gt;&lt;/p&gt;

&lt;p&gt;During the summer of 2006, I participated in a &lt;a href=&quot;http://london.ucdavis.edu/~reu/REU06/reu06.html&quot;&gt;physics REU at UC
Davis&lt;/a&gt;. I worked
for &lt;a href=&quot;http://www.physics.ucdavis.edu/people/faculty/faculty_profiles/anthony_tyson.html&quot;&gt;Tony
Tyson&lt;/a&gt;
in the &lt;a href=&quot;http://www.physics.ucdavis.edu/Cosmology/universe.html&quot;&gt;UC Davis cosmology
group&lt;/a&gt;.
Tony Tyson worked on the &lt;a href=&quot;http://dls.physics.ucdavis.edu/&quot;&gt;Deep Lens
Survey&lt;/a&gt; and is director of the
upcoming &lt;a href=&quot;http://www.lsst.org/&quot;&gt;Large Synoptic Survey Telescope&lt;/a&gt;.
These experiments use &lt;a href=&quot;http://en.wikipedia.org/wiki/Weak_gravitational_lensing&quot;&gt;weak gravitational
lensing&lt;/a&gt;
to infer the distribution of dark matter in the universe.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/reugroup06.jpg&quot; alt=&quot;A group photo for the 2006 UC Davis physics REU. You can see me
third from the right. Photo from
http://london.ucdavis.edu/~reu/REU06/reu06.html&quot; /&gt;&lt;/p&gt;

&lt;p&gt;During the REU, I helped build a computer simulation of the DLS to
quantify possible sources of systematic error. The simulation
realistically models the density of stars and galaxies in the
universe with realistic energy distributions. It allows the galaxies
to be distorted by an input dark matter distribution and it
realistically simulates the atmospheric point spread function and
atmospheric noise. It separately simulates the 8 CCD chips that
make up the detector and it simulates the astronomical process of
dithering where multiple exposures at slight offsets are coadded
together. For increased efficiency, I wrote the simulation so that
it could be run in parallel on the computer cluster at Davis. Using
the simulated data, I measured the dark matter signal in the simulated
data and compared it to the signal in the Monte Carlo distribution.&lt;/p&gt;

&lt;p&gt;You can read the paper I wrote at the end of the summer summarizing my work &lt;a href=&quot;/assets/lande_REU_paper_2006.pdf&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>The pointlike Maximum-likelihood Fitting Package For Analysis Fermi-LAT Data</title>
   <link href="http://www.joshualande.com/pointlike-fitting-package"/>
   <updated>2013-02-01T00:00:00-05:00</updated>
   <id>http://www.joshualande.com/pointlike-fitting-package</id>
   <content type="html">&lt;p&gt;&lt;img src=&quot;/assets/gamma_cygni_pointlike-940x935.jpg&quot; alt=&quot;The Gamma-cygni SNR observed by Fermi. This image was created in pointlike and is from http://arxiv.org/abs/1207.0027.&quot; /&gt;&lt;/p&gt;

&lt;p&gt;During graduate school, I was involved with the development of pointlike, a package for fitting data observed by the &lt;a href=&quot;http://fermi.gsfc.nasa.gov&quot;&gt;Fermi Gamma-ray space telescope&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;design&quot;&gt;Design&lt;/h2&gt;

&lt;p&gt;Pointlike was designed from the ground up with flexibility in mind:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;high-level code written in python with an object-oriented design.&lt;/li&gt;
  &lt;li&gt;Interface with underlying C++ libraries to handle &lt;a href=&quot;http://healpix.jpl.nasa.gov&quot;&gt;HEALPix&lt;/a&gt; and &lt;a href=&quot;http://fits.gsfc.nasa.gov&quot;&gt;fits files&lt;/a&gt;. These libraries were wrapped with &lt;a href=&quot;http://www.swig.org&quot;&gt;SWIG&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Leverage as much as possible &lt;a href=&quot;http://www.numpy.org&quot;&gt;numpy&lt;/a&gt;, &lt;a href=&quot;http://www.scipy.org&quot;&gt;scipy&lt;/a&gt;, &lt;a href=&quot;http://matplotlib.org&quot;&gt;matplotlib&lt;/a&gt;, and &lt;a href=&quot;http://leejjoon.github.com/pywcsgrid2&quot;&gt;pywcsgrid2&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;python interface allows great flexibility and adaptability.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;interface&quot;&gt;Interface&lt;/h2&gt;

&lt;p&gt;The objects and functions described below have a variety of parameters that modify their behavior. The easist way to explore pointlike’s features is interactivly in ipython using the &lt;a href=&quot;http://ipython.org/ipython-doc/dev/interactive/tutorial.html#exploring-your-objects&quot;&gt;question mark functionality&lt;/a&gt;:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;err&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ipython&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;In&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;roi&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;print_summary&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;?&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;             &lt;span class=&quot;n&quot;&gt;instancemethod&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Base&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Class&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;       &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;instancemethod&amp;#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Form&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;   &lt;span class=&quot;n&quot;&gt;File&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;             &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nfs&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;farm&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;g&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;glast&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;u35&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ReleaseManagerBuild&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;redhat5&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x86_64&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;64.&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;..&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Definition&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;       &lt;span class=&quot;n&quot;&gt;roi&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;print_summary&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;roi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sdir&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;galactic&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;False&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;maxdist&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;5.&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;..&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Docstring&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;formatted&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;table&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;point&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sources&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;positions&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;parameter&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;the&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ROI&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;followed&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;by&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;summary&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;diffuse&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;names&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;parameters&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;values&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;values&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;are&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;followed&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;by&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;character&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;indicate&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;status&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;blank&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fixed&lt;/span&gt;
            &lt;span class=&quot;err&quot;&gt;?&lt;/span&gt;      &lt;span class=&quot;n&quot;&gt;sigma&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fit&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;yet&lt;/span&gt;
            &lt;span class=&quot;err&quot;&gt;!&lt;/span&gt;      &lt;span class=&quot;n&quot;&gt;relative&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.1&lt;/span&gt;
            &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;      &lt;span class=&quot;n&quot;&gt;otherwise&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Parameters&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;----------&lt;/span&gt;
         &lt;span class=&quot;n&quot;&gt;sdir&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SkyDir&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;optional&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;center&lt;/span&gt;
               &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;center&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;will&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;be&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;the&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;first&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;source&lt;/span&gt;
         &lt;span class=&quot;n&quot;&gt;galactic&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;bool&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;optional&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;False&lt;/span&gt;
             &lt;span class=&quot;nb&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;l&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;
         &lt;span class=&quot;n&quot;&gt;maxdist&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;float&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;optional&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;
             &lt;span class=&quot;n&quot;&gt;radius&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;degrees&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&quot;build-the-roi&quot;&gt;Build the ROI&lt;/h2&gt;

&lt;p&gt;To perform a Fermi analysis, first create a DataSpecification object. This defines the Fermi data that will be used:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;uw.like.pointspec&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DataSpecification&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;ds&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DataSpecification&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;binfile&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;binned.fits&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                     &lt;span class=&quot;n&quot;&gt;ltcube&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;ltcube.fits&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                     &lt;span class=&quot;n&quot;&gt;ft1files&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;ft1_part1.fits&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;ft1_part2.fits&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
                     &lt;span class=&quot;n&quot;&gt;ft2files&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;ft2.fits&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Next, set the binning and the &lt;a href=&quot;http://www.slac.stanford.edu/exp/glast/groups/canda/lat_Performance.htm&quot;&gt;instrument response function&lt;/a&gt; with the SpectralAnalysis object:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;c&quot;&gt;## First, define the center of your desired analysis region&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;skymaps&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SkyDir&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;center&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SkyDir&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;086.1111&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;38.1838&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SkyDir&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GALACTIC&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;uw.like.pointspec&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SpectralAnalysis&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;sa&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SpectralAnalysis&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                    &lt;span class=&quot;n&quot;&gt;binsperdec&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                    &lt;span class=&quot;n&quot;&gt;emin&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                    &lt;span class=&quot;n&quot;&gt;emax&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;100000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                    &lt;span class=&quot;n&quot;&gt;irf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;P6_V3_DIFFUSE&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                    &lt;span class=&quot;n&quot;&gt;roi_dir&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;center&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                    &lt;span class=&quot;n&quot;&gt;maxROI&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                    &lt;span class=&quot;n&quot;&gt;minROI&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Assuming you have a &lt;a href=&quot;http://fermi.gsfc.nasa.gov/ssc/data/analysis/scitools/source_models.html&quot;&gt;gtlike-style XML file&lt;/a&gt; defining the sky model, create the region of interest (ROI):&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;roi&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sa&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;roi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;xmlfile&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;model.xml&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This ROI object can be used to perform many common Fermi analyses.&lt;/p&gt;

&lt;h2 id=&quot;basic-fitting&quot;&gt;Basic Fitting&lt;/h2&gt;

&lt;p&gt;To print a summary of the sources in your model:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;roi&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;print_summary&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This produces the output&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;o&quot;&gt;----------------------------------------------------------------------------&lt;/span&gt;
         &lt;span class=&quot;n&quot;&gt;Nearby&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sources&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;within&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;5.0&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;degrees&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;               &lt;span class=&quot;n&quot;&gt;dist&lt;/span&gt;       &lt;span class=&quot;n&quot;&gt;l&lt;/span&gt;       &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;TS&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;flux8&lt;/span&gt;   &lt;span class=&quot;n&quot;&gt;index&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;beta&lt;/span&gt;    &lt;span class=&quot;n&quot;&gt;cutoff&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;FGL&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;J1837&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;0700&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;  &lt;span class=&quot;mf&quot;&gt;0.2&lt;/span&gt;  &lt;span class=&quot;mf&quot;&gt;25.084&lt;/span&gt;   &lt;span class=&quot;mf&quot;&gt;0.132&lt;/span&gt;  &lt;span class=&quot;mi&quot;&gt;48&lt;/span&gt;   &lt;span class=&quot;mf&quot;&gt;2.08&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;  &lt;span class=&quot;mf&quot;&gt;1.60&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;FGL&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;J1836&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;0623&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;  &lt;span class=&quot;mf&quot;&gt;0.6&lt;/span&gt;  &lt;span class=&quot;mf&quot;&gt;25.569&lt;/span&gt;   &lt;span class=&quot;mf&quot;&gt;0.324&lt;/span&gt;  &lt;span class=&quot;mi&quot;&gt;13&lt;/span&gt;   &lt;span class=&quot;mf&quot;&gt;0.45&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;  &lt;span class=&quot;mf&quot;&gt;0.02&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;  &lt;span class=&quot;mf&quot;&gt;0.22&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;   &lt;span class=&quot;mf&quot;&gt;100.36&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;FGL&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;J1834&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;0705&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;  &lt;span class=&quot;mf&quot;&gt;0.7&lt;/span&gt;  &lt;span class=&quot;mf&quot;&gt;24.715&lt;/span&gt;   &lt;span class=&quot;mf&quot;&gt;0.503&lt;/span&gt;  &lt;span class=&quot;mi&quot;&gt;46&lt;/span&gt;  &lt;span class=&quot;mf&quot;&gt;33.11&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;  &lt;span class=&quot;mf&quot;&gt;2.35&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;FGL&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;J1839&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;055&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;  &lt;span class=&quot;mf&quot;&gt;1.0&lt;/span&gt;  &lt;span class=&quot;mf&quot;&gt;26.080&lt;/span&gt;   &lt;span class=&quot;mf&quot;&gt;0.229&lt;/span&gt;  &lt;span class=&quot;mi&quot;&gt;21&lt;/span&gt;   &lt;span class=&quot;mf&quot;&gt;2.29&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;  &lt;span class=&quot;mf&quot;&gt;0.10&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;  &lt;span class=&quot;mf&quot;&gt;0.56&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;   &lt;span class=&quot;mf&quot;&gt;553.51&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;FGL&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;J1834&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0848&lt;/span&gt;   &lt;span class=&quot;mf&quot;&gt;2.0&lt;/span&gt;  &lt;span class=&quot;mf&quot;&gt;23.143&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.242&lt;/span&gt;  &lt;span class=&quot;mi&quot;&gt;18&lt;/span&gt;   &lt;span class=&quot;mf&quot;&gt;1.45&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;  &lt;span class=&quot;mf&quot;&gt;0.45&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;  &lt;span class=&quot;mf&quot;&gt;0.19&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;    &lt;span class=&quot;mf&quot;&gt;74.40&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;FGL&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;J1841&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;045&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;  &lt;span class=&quot;mf&quot;&gt;2.2&lt;/span&gt;  &lt;span class=&quot;mf&quot;&gt;27.323&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.011&lt;/span&gt;   &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;  &lt;span class=&quot;mf&quot;&gt;10.52&lt;/span&gt;   &lt;span class=&quot;mf&quot;&gt;2.47&lt;/span&gt;   &lt;span class=&quot;mf&quot;&gt;0.22&lt;/span&gt;   &lt;span class=&quot;mf&quot;&gt;1940.48&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;----------------------------------------------------------------------------&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;Diffuse&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sources&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;----------------------------------------------------------------------------&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;ring_2year_P76_v0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fits&lt;/span&gt;      &lt;span class=&quot;mf&quot;&gt;0.74&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;!&lt;/span&gt;      &lt;span class=&quot;mf&quot;&gt;0.90&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;!&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;isotrop_2year_P76_source_v0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;txt&lt;/span&gt;      &lt;span class=&quot;mf&quot;&gt;0.00&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;----------------------------------------------------------------------------&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Total&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ow&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;negative&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;logLikelihood&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;58282.6030786&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;To perform a spectral fit:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;roi&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;use_gradient&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;False&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This produces the output&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;o&quot;&gt;.....&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;performing&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;likelihood&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;maximization&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Optimization&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;terminated&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Current&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;259556.745008&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Iterations&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;229&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Function&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;evaluations&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;379&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Function&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;minimum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;259556.75&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Attempting&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;invert&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;full&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hessian&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;To compute the &lt;a href=&quot;http://en.wikipedia.org/wiki/Test_statistic&quot;&gt;test statistic&lt;/a&gt; for the detection of the source:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;ts&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;roi&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;which&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;name&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;To compute the log likelihood:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;ll&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;roi&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;logLikelihood&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;roi&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;parameters&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;To fit the position of a source:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;roi&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;localize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;which&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;source_name&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;update&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;update=True causes the position of the source to be updated after the position is fit.&lt;/p&gt;

&lt;p&gt;To print the elliptical fit uncertainty:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;roi&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;print_ellipse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This produces the output&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;ra&lt;/span&gt;     &lt;span class=&quot;n&quot;&gt;dec&lt;/span&gt;     &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;     &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;     &lt;span class=&quot;n&quot;&gt;ang&lt;/span&gt;   &lt;span class=&quot;n&quot;&gt;qual&lt;/span&gt;
  &lt;span class=&quot;mf&quot;&gt;258.008&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;39.635&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.061&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.031&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;25.5596&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;7.7114&lt;/span&gt;   &lt;span class=&quot;mf&quot;&gt;50.65&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The ellipse’s major axis is a, minor axis is b, orientation angle is ang (measured east of celestial north), and elliptical fit quality is qual.&lt;/p&gt;

&lt;p&gt;To get the ellipse values:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;ellipse&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;roi&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get_ellipse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&quot;plotting&quot;&gt;Plotting&lt;/h2&gt;
&lt;p&gt;Making plots in pointlike is easy.&lt;/p&gt;

&lt;p&gt;To plot the spectral energy distribution:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;roi&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;plot_sed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;which&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;name&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;filename&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;sed.pdf&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;/assets/pointlike_sed.png&quot; alt=&quot;An SED computed using pointlike.&quot; /&gt;&lt;/p&gt;

&lt;p&gt;To make a residual test statistic map:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;roi&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;plot_tsmap&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;filename&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;tsmap.pdf&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;/assets/pointlike_tsmap.png&quot; alt=&quot;A TSmap computed using pointlike.&quot; /&gt;&lt;/p&gt;

&lt;p&gt;To plot a model counts map, counts map, and residual counts map:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;roi&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;plot_counts_map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;filename&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;counts.pdf&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;/assets/pointlike_counts_map.png&quot; alt=&quot;A counts map computed using pointlike.&quot; /&gt;&lt;/p&gt;

&lt;p&gt;To plot a smoothed diffuse-emission-subtracted counts map:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;roi&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;plot_sources&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;which&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;name&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                 &lt;span class=&quot;n&quot;&gt;filename&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;source.png&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                 &lt;span class=&quot;n&quot;&gt;kernel_rad&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;/assets/pointlike_smoothed_counts_map.png&quot; alt=&quot;A smoothed counts map computing using pointlike.&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;pointlike-without-xml&quot;&gt;Pointlike without XML&lt;/h2&gt;

&lt;p&gt;You can build a pointlike ROI without a [gtlike-style XML file] (http://fermi.gsfc.nasa.gov/ssc/data/analysis/scitools/source_models.html) by programmatically specifying the background model and source catalog:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;uw.like.roi_catalogs&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Catalog2FGL&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;uw.like.pointspec_helpers&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;get_default_diffuse&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;roi&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sa&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;roi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
  &lt;span class=&quot;c&quot;&gt;# standard gal + iso diffuse&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;diffuse_sources&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get_default_diffuse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;diffdir&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;/path/to/diffuse/&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;gfile&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;ring_24month_P76_v1.fits&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;ifile&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;isotrop_21month_P76_source_v2.txt&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;

  &lt;span class=&quot;c&quot;&gt;# load in 2FGL automatically&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;catalogs&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Catalog2FGL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;gll_psc_v05.fit&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;latextdir&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;gll_psc_v05_templates&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;free_radius&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;

  &lt;span class=&quot;c&quot;&gt;# add additonal point sources&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;point_sources&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&quot;modifying-the-sky-model&quot;&gt;Modifying the Sky Model&lt;/h2&gt;
&lt;p&gt;Pointlike exposes functionality to easily modify the sky model of an ROI.&lt;/p&gt;

&lt;p&gt;To create a new spectral model:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;uw.like.Models&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;PowerLaw&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;norm&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;1e-11&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;2.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;1e3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;PowerLawFlux&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;int_norm&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;1e-7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;2.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;emin&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;emax&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;1e6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;BrokenPowerLaw&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;norm&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;1e-11&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;index_1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;2.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
               &lt;span class=&quot;n&quot;&gt;index_2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;2.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e_break&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;1e3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;BrokenPowerLawFlux&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;int_flux&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;1e-7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;index_1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;2.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                   &lt;span class=&quot;n&quot;&gt;index_2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;2.0&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;e_break&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;1e3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                   &lt;span class=&quot;n&quot;&gt;emin&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;emax&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;1e6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;BrokenPowerLawCutoff&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;norm&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;1e-11&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;index_1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                     &lt;span class=&quot;n&quot;&gt;index_2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;e_break&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;1e3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;SmoothBrokenPowerLaw&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;norm&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;1e-11&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;index_1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;2.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                     &lt;span class=&quot;n&quot;&gt;index_2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;2.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e_break&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;1e3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;beta&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;DoublePowerLaw&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;norm&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;5e-12&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;index_1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
               &lt;span class=&quot;n&quot;&gt;index_2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ratio&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;LogParabola&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;norm&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;1e-11&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;beta&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;1e-5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e_break&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;2e3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;ExpCutoff&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;norm&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;1e-11&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cutoff&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;2.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2e3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;ExpCutoffPlusPL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;norm1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;1e-11&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;index1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cutoff1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;2e3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;norm2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;1e-12&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;index2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;1.5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;AllCutoff&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;norm&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;1e-11&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cutoff&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;1e3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;PLSuperExpCutoff&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;norm&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;1e-11&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cutoff&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;2e3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Constant&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;scale&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;To create a new point source:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;uw.like.pointspec_helpers&lt;/span&gt; \
    &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PointSource&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;uw.like.Models&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PowerLaw&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;ps&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PointSource&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;source&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;skydir&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SkyDir&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;l&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SkyDir&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GALACTIC&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PowerLaw&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;norm&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;1e-11&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                   &lt;span class=&quot;n&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;To add or delete a point source in the ROI:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;roi&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;add_source&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ps&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;roi&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;del_source&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;which&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;name&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;To modify the spectral model or position of a source in the ROI:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;roi&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;modify&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;which&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;name&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PowerLaw&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;roi&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;modify&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;which&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;name&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;skydir&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SkyDir&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;To zero or unzero a source:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;roi&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;zero_source&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;which&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;source&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;roi&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;unzero_source&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;which&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;source&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;To freeze or unfreeze a source:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;roi&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;modify&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;which&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;source_name&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;free&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;False&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;roi&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;modify&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;which&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;source_name&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;free&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&quot;iterative-analyses&quot;&gt;Iterative Analyses&lt;/h2&gt;
&lt;p&gt;One of the major benefits of pointlike is that the underlying functions can be used in more complicated programs.&lt;/p&gt;

&lt;p&gt;For example, to delete all insignificant sources:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;math&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;degrees&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;source&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;roi&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get_sources&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;roi&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;which&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;source&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;roi&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;del_source&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;source&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Or to localize all sources within 2 degrees of the center of the ROI:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;math&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;degrees&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;source&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;roi&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get_sources&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;sd&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;source&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;skydir&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;dist&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;degrees&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sd&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;difference&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;roi&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;roi_dir&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dist&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;roi&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;localize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;which&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;source&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;update&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&quot;file-inputoutput&quot;&gt;File input/output&lt;/h2&gt;
&lt;p&gt;There are several methods for getting data out of pointlike:&lt;/p&gt;

&lt;p&gt;To save a &lt;a href=&quot;http://fermi.gsfc.nasa.gov/ssc/data/analysis/scitools/source_models.html&quot;&gt;gtlike-style XML file&lt;/a&gt;:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;roi&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;toXML&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;output.xml&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;To make a gtlike-style results file:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;roi&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;toResults&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;output.rat&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;To save out a &lt;a href=&quot;http://hea-www.harvard.edu/RD/ds9/site/Home.html&quot;&gt;ds9&lt;/a&gt;-style region file:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;roi&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;toRegion&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;output.reg&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;To save the entire ROI to a file:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;roi&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;save&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;roi.dat&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;To recreate the ROI from another script:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;uw.like.roi_save&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;load&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;roi&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;load&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;roi.dat&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;## play with it some more&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This loading and saving functionality can be very useful for iterative analyses.&lt;/p&gt;

&lt;h2 id=&quot;extended-sources&quot;&gt;Extended Sources&lt;/h2&gt;

&lt;p&gt;Pointlike can natively support spatially-extended sources. Pointlike supports the Disk, Gaussian, EllipticalDisk, EllipticalGaussian, SpatialMap, and &lt;a href=&quot;http://en.wikipedia.org/wiki/Navarro%E2%80%93Frenk%E2%80%93White_profile&quot;&gt;NFW&lt;/a&gt; spatial models.&lt;/p&gt;

&lt;p&gt;The &lt;a href=&quot;http://fermi.gsfc.nasa.gov/ssc/data/analysis/scitools/source_models.html&quot;&gt;gtlike-style XML format&lt;/a&gt; for defining an extended source is straightforward:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;source&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;ic443&amp;quot;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;DiffuseSource&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;spectrum&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;PowerLaw2&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;parameter&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;free&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;1&amp;quot;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;Integral&amp;quot;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;scale&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;1.0&amp;quot;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;3e-7&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;parameter&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;free&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;1&amp;quot;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;Index&amp;quot;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;scale&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;1.0&amp;quot;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;-2&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;parameter&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;free&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;0&amp;quot;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;LowerLimit&amp;quot;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;scale&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;1.0&amp;quot;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;200&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;parameter&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;free&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;0&amp;quot;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;UpperLimit&amp;quot;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;scale&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;1.0&amp;quot;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;1e6&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;spectrum&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;spatialModel&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;Gaussian&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;parameter&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;free&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;1&amp;quot;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;RA&amp;quot;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;scale&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;1.0&amp;quot;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;94.3124&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;parameter&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;free&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;1&amp;quot;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;DEC&amp;quot;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;scale&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;1.0&amp;quot;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;22.5745&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;parameter&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;free&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;1&amp;quot;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;Sigma&amp;quot;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;scale&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;1.0&amp;quot;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;0.18&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;spatialModel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;source&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;To fit the extension parameters of an extended source:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;roi&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fit_extension&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;which&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;name&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This produces the output&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;center&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;258.390&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;39.760&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;d&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ext&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.500&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;d&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;logL&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;31019.772&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dlogL&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.00&lt;/span&gt;
 &lt;span class=&quot;o&quot;&gt;**********&lt;/span&gt;
 &lt;span class=&quot;o&quot;&gt;**&lt;/span&gt;    &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SET&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PRINT&lt;/span&gt;           &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
 &lt;span class=&quot;o&quot;&gt;**********&lt;/span&gt;
 &lt;span class=&quot;o&quot;&gt;**********&lt;/span&gt;
 &lt;span class=&quot;o&quot;&gt;**&lt;/span&gt;    &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SET&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;STR&lt;/span&gt;            &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
 &lt;span class=&quot;o&quot;&gt;**********&lt;/span&gt;
 &lt;span class=&quot;n&quot;&gt;NOW&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;USING&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;STRATEGY&lt;/span&gt;  &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TRY&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TO&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BALANCE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SPEED&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;AGAINST&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;RELIABILITY&lt;/span&gt;
 &lt;span class=&quot;n&quot;&gt;PARAMETER&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DEFINITIONS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;NO&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;   &lt;span class=&quot;n&quot;&gt;NAME&lt;/span&gt;         &lt;span class=&quot;n&quot;&gt;VALUE&lt;/span&gt;      &lt;span class=&quot;n&quot;&gt;STEP&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SIZE&lt;/span&gt;      &lt;span class=&quot;n&quot;&gt;LIMITS&lt;/span&gt;
     &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;RA&lt;/span&gt;           &lt;span class=&quot;mf&quot;&gt;2.58390e+02&lt;/span&gt;  &lt;span class=&quot;mf&quot;&gt;1.00000e-01&lt;/span&gt;    &lt;span class=&quot;mf&quot;&gt;2.48390e+02&lt;/span&gt;  &lt;span class=&quot;mf&quot;&gt;2.68390e+02&lt;/span&gt;
     &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Dec&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rotated&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;   &lt;span class=&quot;mf&quot;&gt;0.00000e+00&lt;/span&gt;  &lt;span class=&quot;mf&quot;&gt;1.00000e-01&lt;/span&gt;   &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;1.00000e+01&lt;/span&gt;  &lt;span class=&quot;mf&quot;&gt;1.00000e+01&lt;/span&gt;
     &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;log10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Sigma&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;3.01030e-01&lt;/span&gt;  &lt;span class=&quot;mf&quot;&gt;4.00000e-02&lt;/span&gt;   &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;1.00000e+01&lt;/span&gt;  &lt;span class=&quot;mf&quot;&gt;4.77121e-01&lt;/span&gt;
 &lt;span class=&quot;o&quot;&gt;**********&lt;/span&gt;
 &lt;span class=&quot;o&quot;&gt;**&lt;/span&gt;    &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SET&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ERRDEF&lt;/span&gt;         &lt;span class=&quot;mf&quot;&gt;0.5&lt;/span&gt;
 &lt;span class=&quot;o&quot;&gt;**********&lt;/span&gt;
 &lt;span class=&quot;o&quot;&gt;**********&lt;/span&gt;
 &lt;span class=&quot;o&quot;&gt;**&lt;/span&gt;    &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SIMPLEX&lt;/span&gt;          &lt;span class=&quot;mi&quot;&gt;500&lt;/span&gt;        &lt;span class=&quot;mf&quot;&gt;0.05&lt;/span&gt;
 &lt;span class=&quot;o&quot;&gt;**********&lt;/span&gt;
 &lt;span class=&quot;n&quot;&gt;FIRST&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CALL&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TO&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;USER&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;FUNCTION&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;AT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;NEW&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;START&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;POINT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;WITH&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IFLAG&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;4.&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;center&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;258.390&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;39.760&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;d&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ext&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.500&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;d&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;logL&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;31019.772&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dlogL&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.00&lt;/span&gt;
 &lt;span class=&quot;n&quot;&gt;START&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SIMPLEX&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MINIMIZATION&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;    &lt;span class=&quot;n&quot;&gt;CONVERGENCE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;WHEN&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;EDM&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;LT&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.05&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;center&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;258.520&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;39.760&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;d&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ext&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.500&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;d&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;logL&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;31018.118&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dlogL&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;1.65&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;setting&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;source&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;best&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fit&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;parameters&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;center&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;258.461&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;39.907&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;d&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ext&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.551&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;d&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;logL&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;31024.697&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dlogL&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;4.92&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;To compute the extension significance of an extended source:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;ts_ext&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;roi&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TS_ext&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;which&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;name&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;To create an extended source directly from python:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;uw.like.SpatialModels&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;center&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SkyDir&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;178&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SkyDir&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GALACTIC&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;Disk&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sigma&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;center&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;center&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;NFW&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sigma&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;center&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;center&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Gaussain&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sigma&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;center&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;center&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;EllipticalDisk&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;major_axis&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
               &lt;span class=&quot;n&quot;&gt;minor_axis&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pos_angle&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;45&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
               &lt;span class=&quot;n&quot;&gt;center&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;center&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;EllipticalGaussian&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;major_axis&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                  &lt;span class=&quot;n&quot;&gt;minor_axis&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pos_angle&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;45&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                 &lt;span class=&quot;n&quot;&gt;center&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;center&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;SpatialMap&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;template.fits)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;To create a new extended source:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;uw.like.roi_extended&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ExtendedSource&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;uw.like.Models&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PowerLaw&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;uw.like.SpatialModels&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Disk&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;spatial&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Disk&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sigma&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;center&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SkyDir&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;l&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SkyDir&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GALACTIC&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;spectral&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PowerLaw&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;norm&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;1e-11&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;es&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ExtendedSource&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;extended source&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                  &lt;span class=&quot;n&quot;&gt;spatial_model&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;spatial&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                  &lt;span class=&quot;n&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;spectral&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;To add the extended source to the ROI:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;roi&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;add_source&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;es&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;To modify a source’s spatial model:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;roi&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;modify&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;which&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;extended_source&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
           &lt;span class=&quot;n&quot;&gt;spatial_model&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Disk&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sigma&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;center&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SkyDir&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;To convert a point source into an extended source:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;roi&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;modify&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;which&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;point_source&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;spatial_model&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=...&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;To convert an extended source into a point source:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;roi&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;modify&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;which&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;extended_source&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;skydir&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=...&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&quot;references&quot;&gt;References&lt;/h2&gt;

&lt;p&gt;If you would like to learn more about pointlike:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;There is additional documentation about pointlike on the &lt;a href=&quot;http://glast-ground.slac.stanford.edu/workbook/pages/sciTools_pointlike_tutorial/2_pointlike_tutorial_part01.html&quot;&gt;LAT workbook&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://arxiv.org/abs/1101.6072&quot;&gt;Matthew Kerr’s PhD Thesis&lt;/a&gt; describes the implementation details of pointlike.&lt;/li&gt;
  &lt;li&gt;The extended source functionality of pointlike is described in &lt;a href=&quot;http://arxiv.org/abs/1207.0027&quot;&gt;this publication&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;You can view the pointlike source code &lt;a href=&quot;http://www-glast.stanford.edu/cgi-bin/viewcvs/pointlike/python/uw&quot;&gt;here&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you have any questions or comments, please post them below. If
you liked this post, you can
&lt;a href=&quot;https://twitter.com/intent/tweet?url=http://www.joshualande.com/pointlike-fitting-package&amp;amp;text=The pointlike Maximum-likelihood Fitting Package For Analysis Fermi-LAT Data&amp;amp;via=joshualande&quot; target=&quot;_blank&quot;&gt;
  share it with your followers&lt;/a&gt; 
or 
&lt;a href=&quot;https://twitter.com/joshualande&quot;&gt;
  follow me on Twitter&lt;/a&gt;!&lt;/p&gt;

</content>
 </entry>
 

</feed>
